---
title: "Figures"
format: html
editor: source
author: viv3kanand
---

## Install packages

```{r}
#| label: install
#| echo: true
#| eval: false
options(renv.config.pak.enabled = TRUE)

renv::install("ggpointdensity")
renv::install("paletteer")

```


## Load libraries

```{r}
#| label: packages
#| echo: true
#| eval: true
#| message: false
#| warning: false

require(Seurat)
require(DropletUtils)
require(tidyverse)
require(ggpointdensity)
require(ggsignif)
require(scico)
require(slingshot)

```

### Load data

```{r}
#| label: load data
#| echo: false
#| eval: true

seu_PBMC <- read_rds("../data/2024-11-22_seurat_obj_PBMC.rds")

DefaultAssay(seu_PBMC) <- "RNA"
Idents(seu_PBMC) <- "cell_type"

seu_WB <- read_rds("../data/2024-10-17_seurat_obj_WB.rds")

DefaultAssay(seu_WB) <- "RNA"
Idents(seu_WB) <- "cell_type"
seu_WB <- JoinLayers(seu_WB)


# TF analysis

acts_TF_PBMC <- read_rds("../data/temp/acts_TF_PBMC.rds")

seu_PBMC[['tfsulm']] <- acts_TF_PBMC |> 
  tidyr::pivot_wider(id_cols = 'source', 
                     names_from = 'condition',
                     values_from = 'score') |> 
  tibble::column_to_rownames('source') |> 
  Seurat::CreateAssayObject()

DefaultAssay(seu_PBMC) <- "tfsulm"

seu_PBMC <- Seurat::ScaleData(seu_PBMC)
seu_PBMC@assays$tfsulm@data <- seu_PBMC@assays$tfsulm@scale.data

# Aggregate expression data
cd14_PBMC <- subset(seu_PBMC, idents = "CD14 Mono")
Idents(cd14_PBMC) <- "Condition"
avg.cd14.mono <- log1p(AverageExpression(cd14_PBMC, verbose = FALSE)$RNA) |> as.data.frame()
avg.cd14.mono$gene <- rownames(avg.cd14.mono)

write_rds(avg.cd14.mono, "RData/avg.cd14.mono.rds")
```

## Load data

```{r}
#| label: load data
#| echo: true
#| eval: false

seu_WB <- read_rds(paste0("RData/", Sys.Date(), "_seurat_WB.rds"))
seu_PBMC <- read_rds(paste0("RData/", Sys.Date(), "_seurat_PBMC.rds"))

DefaultAssay(seu_WB) <- "RNA"
Idents(seu_WB) <- "cell_type"

DefaultAssay(seu_PBMC) <- "RNA"
Idents(seu_PBMC) <- "cell_type"

```

## Helper scripts

```{r}
#| label: source helper scripts
#| echo: true
#| eval: true

source("../scripts/helper_scripts.R")
source("../scripts/dcats.R")
source("../scripts/gsva.R")

```

### Custom theme to apply

```{r}
# Theme elements
font <- "Helvetica"
text_size <- 6
line_size <- 0.5

# Figure elements
res <- 300
full_width <- 8.5
full_height <- 13
meas_units <- "in"
output_filetype <- "png"
fig_lab_size <- 9
fig_lab_pos_x <- 0
fig_lab_pos_y <- 1

custom_theme <- function(){
  theme_classic() +
    theme(text = element_text(family = font,
                              size = text_size),
          strip.text.x = element_text(size = 10),
          line = element_line(linewidth = line_size),
          legend.title = element_text(size = rel(1.25)),
          axis.title = element_text(size = rel(1.25)),
          axis.text = element_text(size = rel(1.15)),
          plot.title = element_text(size = rel(1.5),
                                    hjust = 0.5),
          panel.grid = element_blank(),
          plot.background = element_rect(fill = "white"),
          legend.position = "right",
          legend.text=element_text(size = rel(1.15)))
}

empty_axis <- function(){
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())
}


umap_col <- paletteer::paletteer_d("ggthemes::Tableau_20")

palette1 <- c("#E64B35FF", "#417839FF")
palette2 <- c("#FF3D7FFF", "#3FB8AFFF")
palette3 <- c("#3A488AFF", "#BE3428FF") # paletteer_d("lisa::OskarSchlemmer")
palette4 <- c("#CF597EFF", "#009392FF") # paletteer_d("rcartocolor::Temps")
palette5 <- c("#CF597EFF", "#E9E29CFF", "#009392FF")

palette6 <- c("#9E0142", "#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#FFFFBF", "#E6F598", "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#D53E4F", "#004E64", "#DBB957", "#8FA6CB", "#66C2A5")

palette7 <- RColorBrewer::brewer.pal(11,'Spectral')

```

## QC

### Library saturation

```{r}
#| label: saturation
#| echo: true
#| eval: true
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

ggplot(seurat_list$C2_Control@meta.data, aes(nCount_RNA, nFeature_RNA)) +
    geom_bin2d(bins = 50) +
    scico:: scale_fill_scico(palette = "devon", direction = -1) +
    scale_x_log10(guide = "axis_logticks") + scale_y_log10(guide = "axis_logticks") +
    labs(x = "Total UMI counts", y = "Number of genes detected")

## plot QC for individual samples
purrr::imap(seurat_list, function(obj, name){
ggplot(obj@meta.data, aes(nCount_RNA, nFeature_RNA)) +
    geom_bin2d(bins = 50) +
    scico:: scale_fill_scico(palette = "devon", direction = -1) +
    scale_x_log10(guide = "axis_logticks") + scale_y_log10(guide = "axis_logticks") +
    labs(x = "Total UMI counts", y = "Number of genes detected")
    
    ggsave(paste0("figures/PBMC/QC/Library saturation/",name,".png"))
})

```

### Knee plot

```{r}
#| label: knee plot
#| echo: true
#| eval: true
#| fig-width: 10
#| fig-height: 7
#| fig-align: center

knee_plot(barcodeRanks(seurat_list$C2_Control[["RNA"]]$counts, lower = 10))

## knee plot for individual samples
purrr::imap(seurat_list, function(obj, name){
  knee_plot(barcodeRanks(obj[["RNA"]]$counts, lower = 10))
  ggsave(paste0("figures/PBMC/QC/Knee/",name,".png"))
})


```


```{r}
ggplot(seurat_obj@meta.data, aes(nCount_RNA, percent.mt)) +
  geom_pointdensity() +
  scale_color_scico(palette = "devon", direction = -1, end = 0.9) +
  labs(x = "Total UMI counts", y = "Percentage mitochondrial")

```


```{r}
p1 <- seu_PBMC@meta.data |> 
    ggplot(aes(color = Condition, x = nFeature_RNA  , fill = Condition)) + 
    geom_density(alpha = 0.2) + 
    scale_x_log10() + 
    theme_classic() +
    ylab("Density") +
    geom_vline(xintercept = 500)

p2 <- seu_PBMC@meta.data |> 
    ggplot(aes(color = Condition, x = nCount_RNA , fill = Condition)) + 
    geom_density(alpha = 0.2) + 
    scale_x_log10() + 
    theme_classic() +
    ylab("Density") +
    geom_vline(xintercept = 500)

p3 <- seu_PBMC@meta.data |> 
    ggplot(aes(color = Condition, x = percent.mt, fill = Condition)) + 
    geom_density(alpha = 0.2) + 
    #scale_x_log10() + 
    theme_classic() +
    geom_vline(xintercept = c(5, 10))

p4 <- FeatureScatter(seu_PBMC, feature1 = "nCount_RNA", feature2 = "nFeature_RNA") & NoLegend()

p1 + p2 + p3 + p4

ggsave("analysis/figures/PBMC/QC/basicQC.png")
```

<!-- Todo list -->

<!-- Panel 1: Bulk RNAseq: PCA plot, Volcano plot, GO/KEGG plot, Heatmap of immune system/neutrophil related genes -->

<!-- Panel 2: WGCNA- bulk, IPA module 3: Tom plot, heatmap, Module eigenvector plot with significance, Module 3 IPA Top 20 pathway plot  -->


### Panel 1: Bulk - Volcano, IPA, GSVA, WGCNA Module Pathway

```{r}
# Volcano plot
dge_bulk <- read_csv("../data/Bulk/DEseq2-gene-batch-corrected-14Nov22.csv")

dge_array <- read_tsv("../data/extdata/GSE30933.top.table.tsv")
dge_array <- read_csv("../data/extdata/array_df.csv") |> 
  select(Symbol, logFC.patient_vs_control, pp.patient_vs_control) |> 
  mutate(log2FC = logFC.patient_vs_control / log10(2),
         pval = 1 - pp.patient_vs_control)

dge_combined <- dge_bulk |> 
  left_join(y = unique(dge_array[, c("Symbol", "log2FC", "pval")]), by = c("Gene" = "Symbol")) |> 
  na.omit()

dge_combined_sig <- dge_combined |> filter(padj < 0.05 & pval < 0.05)
cor.test(dge_combined_sig$log2FoldChange, dge_combined_sig$log2FC)

P1A <- dge_bulk |> 
    mutate(
        Expression = case_when(
            log2FoldChange >= 1 & padj <= 0.05 ~ "Upregulated",
            log2FoldChange <= -1 & padj <= 0.05 ~ "Downregulated",
            TRUE ~ "Not significant")) |>
    ggplot(aes(x = log2FoldChange, y = -log10(padj))) +
    geom_point(aes(color = Expression, alpha = 0.8)) +
    ggrepel::geom_text_repel(data = head(dge_bulk[order(dge_bulk[["padj"]]),], 20),
                             aes(label = Gene), max.overlaps = 20, 
                             force = 10, 
                             segment.size = 0.2,
                             segment.curvature = -0.5,
                             size = 2) +
    scale_color_manual(values = c("#CB477A", "grey", "#469FBF")) +
    scale_x_continuous(name = "Log2 Fold Change") +
    scale_y_continuous(name = "-Log10 padj") +
    geom_hline(yintercept = -log10(0.05), linetype = 2, color = "black") +
    geom_vline(xintercept = c(-1, 1), linetype = 2, color = "black") +
    guides(alpha = "none", size = "none") + 
    custom_theme()


# IPA

ipa_bulk <- read_csv("../data/Bulk/IPA.csv")

P1B <- ipa_bulk |> 
    filter(!Zscore %in% c("#NUM!", 0)) |> 
    head(20) |> 
    mutate(Zscore = as.double(Zscore),
           pvalue = 10^-Logpval,
           Count = str_count(Molecules, ",") + 1,
           Enrichment = case_when(
               Zscore > 0 ~ "Enriched",
               Zscore < 0 ~ "Depleted"),
           Enrichment = factor(Enrichment, levels = c("Enriched", "Depleted")),
           order = Zscore, .by = Pathways) |> 
    ggplot(aes(x = Zscore, y = reorder(Pathways, order), fill = Enrichment, alpha = Logpval)) +
    geom_bar(aes(x = Zscore), stat = "identity") + 
    labs(x = "z-score", y = "", alpha = "-Log10(pvalue)") + 
    scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
    custom_theme()


# GSVA
vsd <- read_rds("RData/Bulk/2025-01-28_vsd.rds")
gset_list <- read_rds("RData/gsva/gset_list.rda")


vst_gsva <- as.data.frame(assay(vsd)) |>
  tibble::rownames_to_column("symbol") |>
  dplyr::distinct(symbol, .keep_all = TRUE) |> 
  remove_rownames() |>
  relocate(symbol) |> 
  as_tibble()

res_gsva <- applyGSVA(gset_df = gset_list, group_col = "cell_type", gene_col = "symbol", expr_mat = vst_gsva) |> t() |> as.data.frame()

res_gsva$Condition <- colData(vsd)$Condition[match(rownames(res_gsva), rownames(colData(vsd)))]



P1C <- res_gsva |> 
  pivot_longer(cols = 1:27, names_to = "celltype", values_to = "value") |>
  filter(celltype %in% c("B cells", 
                         "CD8 T cells", 
                         "DC", 
                         "Monocytes", 
                         "Neutrophils", 
                         "NK cells", 
                         "T cells", 
                         "T helper cells")) |> 
  ggplot(aes(Condition, value, fill = Condition)) +
  geom_boxplot(alpha = 0.8, width = 0.5, outlier.colour = "grey", fatten = 1) +
  facet_wrap(~celltype) +
  guides(alpha = "none") +
  geom_signif(
    comparisons = list(c("Control", "Patient")),
    map_signif_level = TRUE, textsize = 2
    ) +
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  labs(x = "", y = "GSVA score") +
  custom_theme() +
  theme(strip.placement = "outside",
        axis.text.x = element_blank()) +
  ylim(NA, 1.2)

P1C <- shift_legend(P1C)


P1_top <- cowplot::plot_grid(P1A, P1B, P1C, rel_widths = c(0.8, 1, 1), nrow = 1, align = "h", labels = "AUTO")


# ggsave(filename = "figures/Panel1/P1_top.png", 
#        plot = P1_top,
#        units = "in", 
#        width = 13,
#        height = 8.5/2,
#        dpi = 600,
#        bg = "white")


# WGCNA

P1D <- cowplot::ggdraw() + cowplot::draw_image("figures/Bulk/WGCNA/manu-fig-02-A-TOMplot-30x30.png")

# P1E <- cowplot::ggdraw() + cowplot::draw_image("figures/Bulk/WGCNA/manu-fig-02-C-boxplot-sig-padj-ME.png")

wgcna_bulk <- read.csv("RData/09-wgcna-me-eg.csv", header = TRUE)
names(wgcna_bulk) <- c("condition", "MEs", "value")
wgcna_bulk$MEs <- as.factor(wgcna_bulk$MEs)

wgcna_test <- wgcna_bulk |> 
  dplyr::group_by(MEs) |> 
  rstatix::wilcox_test(value ~ condition) |> 
  rstatix::adjust_pvalue(method = "bonferroni") |> 
  rstatix::add_significance() |> 
  rstatix::add_xy_position(x = "condition") |> 
  filter(p.adj.signif != "ns")


P1E <- wgcna_bulk |> filter(MEs %in% wgcna_test$MEs) |>
  ggplot() +
  geom_boxplot(aes(condition, value, fill = condition), width = 0.5, alpha = 0.8) +
  ggpubr::stat_pvalue_manual(wgcna_test, label = "p.adj") +
  facet_wrap(~MEs) + 
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  labs(x = "", y = "Module Eigengene", fill = "Condition") +
  custom_theme() +
  theme(strip.placement = "outside", axis.text.x = element_blank())

P1E <- shift_legend(P1E)


# Module 3 IPA

ipa_m3 <- read_csv("../data/Bulk/IPA_M3.csv")

P1F <- ipa_m3 |> 
    filter(!Zscore %in% c("#NUM!", 0)) |> 
    head(20) |> 
    mutate(Zscore = as.double(Zscore),
           pvalue = 10^-Logpval,
           Count = str_count(Molecules, ",") + 1,
           Enrichment = case_when(
               Zscore > 0 ~ "Enriched",
               Zscore < 0 ~ "Depleted"),
           Enrichment = factor(Enrichment, levels = c("Enriched", "Depleted")),
           order = Zscore, .by = Pathways) |> 
    ggplot(aes(x = Zscore, y = reorder(Pathways, order), fill = Enrichment, alpha = Logpval)) +
    geom_bar(aes(x = Zscore), stat = "identity") + 
    labs(x = "z-score", y = NULL, alpha = "-Log10(pvalue)") + 
    scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
    custom_theme()


P1_bottom <- cowplot::plot_grid(P1D, P1E, P1F, labels = c("D", "E", "F"), nrow = 1)

# ggsave(filename = "figures/Panel1/P1_bottom.png", 
#        plot = P1_bottom,
#        units = "in", 
#        width = 13,
#        height = 8.5/2,
#        dpi = 600,
#        bg = "white")

P1_final <- cowplot::plot_grid(P1_top, P1_bottom, nrow = 2)

ggsave(filename = "figures/Panel1/P1_final.png", 
       plot = P1_final,
       units = "in", 
       width = 13,
       height = 8.5,
       dpi = 600,
       bg = "white")
```


### Heatmaps

```{r}
# Heatmap top genes

top_genes <- dge_bulk |> filter(abs(log2FoldChange) > 1 & padj < 0.05) |> pull(Gene)

mat_sel <- assay(vsd) |>
  as.data.frame() |> 
  filter(row.names(assay(vsd)) %in% top_genes)

colors.use <- grDevices::colorRampPalette(colors = c("#D53E4F","#FFFFFF", "#3288BD"))(100)

my_breaks <- c(seq(-2, 0, length.out = ceiling(100 / 2) + 1),
               seq(0.05, 2, length.out = floor(100 / 2)))

ann_colors = list(Condition = c(Patient = "#D53E4F", Control = "#3288BD"))

# vertical heatmap
P3 <- ggplotify::as.ggplot(
    pheatmap::pheatmap(mat = mat_sel,
                       annotation_col = meta_bulk |> select(Condition),
                       annotation_colors = ann_colors,
                       color = colors.use,
                       border_color = "white",
                       breaks = my_breaks,
                       cluster_cols = FALSE,
                       cluster_rows = TRUE,
                       show_rownames = FALSE,
                       show_colnames = FALSE,
                       treeheight_row = 10,
                       cellwidth = 3,
                       scale = "row"))

# horizontal heatmap
P3 <- ggplotify::as.ggplot(
    pheatmap::pheatmap(mat = t(mat_sel),
                       annotation_col = meta_bulk |> select(Condition),
                       annotation_colors = ann_colors,
                       color = colors.use,
                       border_color = "white",
                       breaks = my_breaks,
                       cluster_cols = TRUE,
                       cluster_rows = FALSE,
                       show_rownames = FALSE,
                       show_colnames = FALSE,
                       treeheight_row = 5,
                       scale = "column"))


ipa_genes1 <- str_split(ipa_bulk[1,]$Molecules, ",")[[1]]

mat_ipa1 <- assay(vsd) |>
  as.data.frame() |> 
  filter(row.names(assay(vsd)) %in% ipa_genes1)

ha <- HeatmapAnnotation(df = meta_bulk |> select(Condition), 
                        col = list(
                          Condition = c("Control" = "#3288BD", "Patient" = "#D53E4F")),
                        annotation_name_side = "left",
                        show_legend = FALSE)

col_fun = circlize::colorRamp2(c(-2, 0, 2), c("#3288BD", "white", "#D53E4F"))

h1 <- ggplotify::as.ggplot(
  ComplexHeatmap::Heatmap(t(scale(t(as.matrix(mat_ipa1)))), 
                        top_annotation = ha, 
                        column_title = "Neutrophil Degranulation",
                        cluster_columns = FALSE,
                        col = col_fun,
                        row_km = 2, 
                        show_row_names = TRUE,
                        show_column_names = FALSE,
                        row_names_gp = grid::gpar(fontsize = 8),
                        width = unit(5, "cm"),
                        rect_gp = gpar(col = "white", lwd = 0.5),
                        show_heatmap_legend = FALSE,
                        name = "Scaled\nnormalized\nexpression"))

lgd1 <- Legend(col_fun = col_fun, title = "Scaled\nnormalized\nexpression")

lgd2 <- Legend(labels = c("Control", "Patient"), 
               legend_gp = gpar(fill = c("#3288BD", "#D53E4F")), 
               title = "Condition")



ipa_genes2 <- str_split(ipa_bulk[6,]$Molecules, ",")[[1]]

mat_ipa2 <- assay(vsd) |>
  as.data.frame() |> 
  filter(row.names(assay(vsd)) %in% ipa_genes2)

h2 <- ggplotify::as.ggplot(
  ComplexHeatmap::Heatmap(t(scale(t(as.matrix(mat_ipa2)))), 
                        top_annotation = ha,
                        column_title = "IL10 signalling",
                        cluster_columns = FALSE,
                        col = col_fun,
                        row_km = 2, 
                        show_row_names = TRUE,
                        show_column_names = FALSE,
                        row_names_gp = grid::gpar(fontsize = 8),
                        width = unit(5, "cm"),
                        rect_gp = gpar(col = "white", lwd = 0.5),
                        show_heatmap_legend = FALSE,
                        name = "Scaled\nnormalized\nexpression"))


ipa_genes3 <- str_split(ipa_bulk[10,]$Molecules, ",")[[1]]

mat_ipa3 <- assay(vsd) |>
  as.data.frame() |> 
  filter(row.names(assay(vsd)) %in% ipa_genes3)

h3 <- ggplotify::as.ggplot(
  ComplexHeatmap::Heatmap(t(scale(t(as.matrix(mat_ipa3)))), 
                        top_annotation = ha, 
                        column_title = "NETOSIS",
                        cluster_columns = FALSE,
                        col = col_fun,
                        row_km = 2, 
                        show_row_names = TRUE,
                        show_column_names = FALSE,
                        row_names_gp = grid::gpar(fontsize = 8),
                        width = unit(5, "cm"),
                        rect_gp = gpar(col = "white", lwd = 0.5),
                        show_heatmap_legend = FALSE,
                        name = "Scaled\nnormalized\nexpression"))

lgd1 <- Legend(col_fun = col_fun, title = "Scaled\nnormalized\nexpression")

lgd2 <- Legend(labels = c("Patient", "Control"), 
               legend_gp = gpar(fill = c("#D53E4F", "#3288BD")), 
               title = "Condition")

pd = packLegend(lgd1, lgd2)

legend_heatmap <- grid.grabExpr(draw(pd))

h_list <- cowplot::plot_grid(grid.grabExpr(draw(h1)),
                             grid.grabExpr(draw(h2)),
                             legend_heatmap,
                             align = "hv",
                             nrow = 1,
                             rel_widths = c(3, 0.4))

P1CD <- cowplot::plot_grid(h1, h2, legend_heatmap, nrow = 1, rel_widths = c(1, 0.8, 0.3), labels = c("C", "D", ""))

ggsave(filename = "figures/Bulk/fig1CD.png", 
       plot = P1CD,
       units = "in", 
       width = 8.5,
       dpi = 600,
       bg = "white")





```

### Panel 2: scRNA-Seq - WB : UMAP, Marker, DCATS, TF, Pathways, IFN-RIG1, TF-STAT1

```{r}
# UMAP

P2A <- DimPlot(seu_WB, 
               reduction = "umap.harmony", 
               group.by = c("cell_type"), 
               pt.size = 0.5, 
               label = TRUE, 
               label.size = 2,
               cols = umap_col) & 
  labs(title = NULL, x = "UMAP1", y = "UMAP2") &
  NoLegend() &
  custom_theme() +
  empty_axis() +
  NoLegend()

# Markers

markers_WB <- c("MKI67", "TOP2A", "CLEC4C", "NRP1", "FCER1A", "CLEC10A", "LYZ", "PPBP", "FCGR3A", "TNFRSF13B", "JCHAIN", "CD14", "KLRB1", "CD8A", "CD8B", "NKG7", "GNLY", "NCAM1", "CD79A", "MS4A1", "CD4", "CCR7", "ALPL", "MME")

P2B <- DotPlot(seu_WB, features = markers_WB, dot.scale = 3) + 
  scale_colour_gradient2(low = "#3CB49F", mid = 'white', high = "#5575B0") +
  RotatedAxis() +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) &
  labs(title = NULL, x = NULL, y = NULL)

P2AB <- cowplot::plot_grid(P2A, P2B, nrow = 1, labels = "AUTO", rel_widths = c(0.7, 1), axis = "b", align = "hv")

# ggsave(filename = "figures/Panel2/P2AB.png", 
#        plot = P2AB,
#        units = "in", 
#        width = 13/1.5,
#        height = 8.5/2,
#        dpi = 600,
#        bg = "white")

# DCATS

dcats_WB <- run_dcats(seu_WB)

seu_WB@meta.data |> 
    count(cell_type, Condition) |> 
    mutate(dcats = rep(dcats_WB$LRT_pvals, each = 2),
           stars = case_when(
               dcats < 0.001 ~ "***",
               dcats < 0.01 ~ "**",
               dcats < 0.05 ~ "*",
               TRUE ~ "")) |> 
    group_by(cell_type) |> 
    mutate(prop = n / sum(n)) -> dcats_df


dcats_df$cell_type <- reorder(dcats_df$cell_type, ifelse(!dcats_df$Condition %in% "Patient", 0, dcats_df$prop), FUN = sum)

P2C <- ggplot(dcats_df, aes(x = cell_type, y = n, fill = Condition)) +
  geom_col(position = "fill", width = 0.9) +
  geom_text(aes(y = 1, label = stars, group = cell_type), color = "black") +
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  scale_y_continuous(labels = scales::percent) +
  labs(x = "", y = "Relative abundance (%)") +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  theme(legend.position = "top")


# ggsave(filename = "figures/Panel2/P2C.png", 
#        plot = P2C,
#        units = "in", 
#        width = 13/4,
#        height = 8.5/2,
#        dpi = 600,
#        bg = "white")


### TRRUST

tf_NEU <- read_csv("../data/TRRUST_NEU.csv")

P2D <- tf_NEU |> 
  mutate(order = desc(qvalue), .by = TF) |>
  ggplot(aes(x = -log10(qvalue), y = reorder(TF, order))) +
  geom_bar(aes(fill = genes), stat = "identity") +
  xlab("-log10(p-adjust)") +
  ylab("Top TFs") +
  scale_fill_gradientn(colours = c('#3CB49F', '#5575B0'), na.value = "grey") +
  custom_theme()

P2CD <- cowplot::plot_grid(P2C, P2D, nrow = 1, labels = c("C", "D"), rel_widths = c(1, 0.6), axis = "b", align = "hv")

P2_top <- cowplot::plot_grid(P2AB, P2CD, nrow = 1, rel_widths = c(1, 0.8), axis = "b", align = "hv")

ggsave(filename = "figures/Panel2/P2_top.png", 
       plot = P2_top,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")

# Pathways



#IFN-RIG1 

DefaultAssay(seu_WB) <- "module_score"

P2F <- t(as.matrix(seu_WB@assays$module_score@data)) |> 
  as.data.frame() |> 
  dplyr::mutate(cluster = Seurat::Idents(seu_WB),
                Condition = seu_WB@meta.data$Condition) |> 
  tidyr::pivot_longer(cols = c(-cluster, -Condition), 
                      names_to = "source", 
                      values_to = "score") |> 
  filter(cluster == "Neutrophil" & !source == "NEU2") |> 
  mutate(source = str_sub(source, end = -2)) |> 
  ggplot(aes(Condition, score)) +
  ggdist::stat_halfeye(aes(fill = Condition), 
                       alpha = .8,
                       adjust = .5, 
                       width = .8, 
                       justification = -.2, 
                       .width = 0, 
                       point_colour = NA) +
  geom_boxplot(aes(fill = Condition), 
               alpha = .8,
               width = 0.1, 
               outlier.colour = "grey") + 
  labs(x = NULL, y = "Module Score") +
  facet_grid(~source) +
  custom_theme() +
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  geom_signif(
    comparisons = list(c("Control", "Patient")),
    map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()


#TF-STAT1

DefaultAssay(seu_WB) <- "tfsulm"

P2G <- t(as.matrix(seu_WB@assays$tfsulm@data)) |> 
  as.data.frame() |> 
  dplyr::mutate(cluster = Seurat::Idents(seu_WB),
                Condition = seu_WB@meta.data$Condition) |> 
  tidyr::pivot_longer(cols = c(-cluster, -Condition), 
                      names_to = "source", 
                      values_to = "score") |> 
  filter(source == "STAT1" & cluster == c("Neutrophil")) |> 
  ggplot(aes(Condition, score)) +
  ggdist::stat_halfeye(aes(fill = Condition), 
                       alpha = .8,
                       adjust = .5, 
                       width = .8, 
                       justification = -.2, 
                       .width = 0, 
                       point_colour = NA) +
  geom_boxplot(aes(fill = Condition), 
               alpha = .8,
               width = 0.1, 
               outlier.colour = "grey") + 
  facet_grid(~source) +
  labs(x = NULL, y = "TF Score") +
  custom_theme() +
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  geom_signif(
    comparisons = list(c("Control", "Patient")),
    map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()

P2_bottom <- cowplot::plot_grid(NULL, P2F, P2G, nrow = 1, labels = c("E", "F", "G"), rel_widths = c(1, 1), axis = "b", align = "hv")

ggsave(filename = "figures/Panel2/P2_bottom.png", 
       plot = P2_bottom,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")

P2_final <- cowplot::plot_grid(P2_top, P2_bottom, nrow = 2)

ggsave(filename = "figures/Panel2/P2_final.png", 
       plot = P2_final,
       units = "in", 
       width = 13,
       height = 8.5,
       dpi = 600,
       bg = "white")


```


### Panel 3: scRNA-Seq - PBMC : UMAP, Marker, DEG, DCATS, Imbalance score, Trajectory

```{r}
# UMAP

P3A <- DimPlot(seu_PBMC, 
               reduction = "umap.harmony", 
               group.by = c("cell_type"), 
               pt.size = 0.5,
               label = TRUE, 
               label.size = 2,
               raster = FALSE,
               cols = umap_col) & 
  labs(title = NULL, x = "UMAP1", y = "UMAP2") &
  custom_theme() +
  empty_axis() &
  NoLegend()

# Markers

markers_PBMC <- c("CD34", "TNFRSF17", "LEF1", "MKI67", "TOP2A", "CLEC4C", "NRP1", "KLRB1", "PTGDS", "FCER1A", "CLEC10A", "TNFRSF13B", "TRDC", "FCGR3A", "MS4A7", "PPBP", "CD8A", "CD79A", "MS4A1", "CCR7", "CCR4", "NKG7", "GNLY", "NCAM1", "CD14", "LYZ")

P3B <- DotPlot(seu_PBMC, features = markers_PBMC, dot.scale = 3) + 
  scale_colour_gradient2(low = "#3CB49F", mid = 'white', high = "#5575B0") +
  RotatedAxis() +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) &
  labs(title = NULL, x = NULL, y = NULL)


# DEG - Bar plot

DGE_pbmc <- read_rds("RData/2024-09-26_DGE_sc_pbmc.rds")

DGE_pbmc_filt <- lapply(DGE_pbmc, function(df){
  df |> filter(abs(avg_log2FC) > 1 & p_val_adj < 0.05)
})

summary_df <- lapply(names(DGE_pbmc_filt), function(cell_type) {
  df <- DGE_pbmc_filt[[cell_type]]
  up <- nrow(filter(df, avg_log2FC > 1 & p_val_adj < 0.05))
  down <- nrow(filter(df, avg_log2FC < -1 & p_val_adj < 0.05))
  data.frame(
    CellType = cell_type,
    Upregulated = up,
    Downregulated = down
  )
}) |> 
  bind_rows() |> 
  pivot_longer(cols = c(Upregulated, Downregulated), 
               names_to = "Regulation", 
               values_to = "Count")

P3C <- summary_df |> 
  mutate(CellType = fct_reorder(CellType, Count, sum, .desc=FALSE)) |> 
  ggplot(aes(x = CellType, y = Count, fill = Regulation)) +
  ggchicklet::geom_chicklet(width = 0.75) +
  scale_y_continuous(position = "right") +
  scale_fill_manual(
    name = NULL,
    values = c(
      "Upregulated" = "#3CB49F",
      "Downregulated" = "#5575B0"
      ),
    breaks = rev(setdiff(unique(summary_df$Regulation), "Regulation"))
    ) +
  guides(
    fill = guide_legend(nrow = 1)
    ) +
  labs(x = NULL, y = NULL, fill = NULL) +
  coord_flip() +
  theme_minimal() +
  theme(legend.position = "top",
        panel.grid.major.y = element_blank())



P3_top <- cowplot::plot_grid(P3A, P3B, P3C, nrow = 1, labels = "AUTO", rel_widths = c(0.8, 1, 0.8), axis = "b", align = "hv")

ggsave(filename = "figures/Panel3/P3_top.png", 
       plot = P3_top,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")

# DCATS - PBMC

# dcats_df <- run_dcats(seu_PBMC)
# write_rds(dcats_df, paste0("RData/", Sys.Date(),"_dcats-df.rds"))

dcats_PBMC <- read_rds("RData/2025-02-13_dcats-df.rds")
seu_meta <- read_rds("RData/2025-02-10_seu_PBMC_meta.rds")

seu_meta |> 
    count(cell_type, Condition) |> 
    mutate(dcats = rep(dcats_PBMC$LRT_pvals, each = 2),
           stars = case_when(
               dcats < 0.001 ~ "***",
               dcats < 0.01 ~ "**",
               dcats < 0.05 ~ "*",
               TRUE ~ "")) |> 
    group_by(cell_type) |> 
    mutate(prop = n / sum(n)) -> dcats_df

dcats_df$cell_type <- reorder(dcats_df$cell_type, ifelse(!dcats_df$Condition %in% "FRDA", 0, dcats_df$prop), FUN = sum)

P3D <- ggplot(dcats_df, aes(x = cell_type, y = n, fill = Condition)) +
  geom_col(position = "fill", width = 0.9) +
  geom_text(aes(y = 1, label = stars, group = cell_type), color = "black") +
  scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
  scale_y_continuous(labels = scales::percent) +
  labs(x = "", y = "Relative abundance (%)") +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.text = element_text(size=rel(1.15))) +
  theme(legend.position = "top")


# Imbalance

imb_df <- read_rds("RData/2024-12-09_imbalance_score.rds")

P3E <- ggplot(imb_df, aes(x = umapharmony_1, y = umapharmony_2, col = scores)) +
  geom_point(size = 2, alpha = 0.8) +
  scale_color_gradientn(colours = c("#9E0142", "#D53E4F", "#CB477A", "#F46D43", "#FDAE61", "#FFFF33", "#ABDDA4", "#3CB49F", "#469FBF", "#5575B0", "#5E4FA2")) +
  labs(title = NULL, x = "UMAP1", y = "UMAP2") +
  custom_theme() +
  empty_axis()

# P3DE <- cowplot::plot_grid(P3D, P3E, nrow = 1, labels = c("D", "E"), rel_widths = c(1, 1), axis = "b", align = "hv")


# Trajectory

sce_cd14 <- read_rds("RData/trajectory/slingshot_cd14.rds")

P3F <- reducedDims(sce_cd14)$UMAP |> 
  as.data.frame() |> 
  ggplot(aes(x = umapharmony_1, y = umapharmony_2, color = sce_cd14$slingPseudotime_1)) +
  geom_point() +
  scale_color_gradientn(colours = c("#9E0142", "#D53E4F", "#CB477A", "#F46D43", "#FDAE61", "#FFFF33", "#ABDDA4", "#3CB49F", "#469FBF", "#5575B0", "#5E4FA2")) +
  custom_theme() +
  labs(x = "UMAP1", y = "UMAP2") +
  theme(legend.position = "none") +
  geom_path(data = as.data.frame(SlingshotDataSet(sce_cd14)@curves[[1]]$s), 
            aes(x = umapharmony_1, y = umapharmony_2), 
            color = "black", 
            linewidth = 1)

P3G <- colData(sce_cd14)[,c(1,2,3,7,8)] |>
  as.data.frame() |> 
  ggplot(aes(Lineage1, fill = Condition)) + 
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("#5575B0", "#3CB49F")) +
  labs(x = "Pseudotime", y = "Density") + 
  xlim(c(0, 20)) +
  custom_theme()

P3FG <- cowplot::plot_grid(P3F, P3G, ncol = 1, labels = c("F", "G"), rel_widths = c(1, 1), axis = "bt", align = "hv")

P3EFG <- cowplot::plot_grid(P3E, P3FG, nrow = 1, labels = c("E"), rel_widths = c(0.8, 1), axis = "lr", align = "v")

P3_bottom <- cowplot::plot_grid(P3D, P3EFG, nrow = 1, labels = c("D"), rel_widths = c(0.5, 1))

ggsave(filename = "figures/Panel3/P3_bottom.png", 
       plot = P3_bottom,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")


P3_final <- cowplot::plot_grid(P3_top, P3_bottom, ncol = 1)

ggsave(filename = "figures/Panel3/P3_final.png", 
       plot = P3_final,
       units = "in", 
       width = 13,
       height = 8.5,
       dpi = 600,
       bg = "white")

```

### Panel 4 - CD14 Monocytes: 

```{r}
# CD14 Monocyte expression

DGE_PBMC <- read_rds("RData/2024-09-26_DGE_sc_pbmc.rds")

avg.cd14.mono <- read_rds("RData/avg.cd14.mono.rds")

DGE_PBMC$`CD14 Mono` |> 
    mutate(
        Expression = case_when(
            avg_log2FC >= 1 & p_val_adj <= 0.01 ~ "Upregulated",
            avg_log2FC <= -1 & p_val_adj <= 0.01 ~ "Downregulated",
            TRUE ~ "Not significant")) |>
    merge(avg.cd14.mono, by.x = "gene", by.y = "gene") -> CD14_plot_data


P4A <- CD14_plot_data |> 
  ggplot(aes(Control, FRDA)) + 
  geom_point(aes(color = Expression, alpha = 0.8)) + 
  ggtitle("CD14 Mono") + 
  ggrepel::geom_text_repel(data = head(CD14_plot_data |> 
                                         filter(abs(avg_log2FC) > 2 & p_val_adj < 0.01 & !is.na(description)) |>
                                         arrange(p_val_adj, desc(abs(avg_log2FC))), 20), 
                           aes(label = gene), 
                           max.overlaps = 20, 
                           force = 20, 
                           segment.size = 0.2,
                           segment.curvature = -0.1,
                           size = 2) +
  scale_color_manual(values = c("#469FBF", "grey", "#CB477A")) +
  guides(alpha = "none", size = "none") +
  custom_theme()


# CD14 Mono - GSEA

files <- c("RData/gsea/2024-09-26_GSEA_REACTOME.xlsx", "RData/gsea/2024-09-26_GSEA_BP.xlsx")

GSEA_CD14 <- lapply(files, function(file){
  openxlsx::read.xlsx(file, "CD14 Mono")
})

names(GSEA_CD14) <- c("REACTOME", "BP")

pathway_list <- c("GOBP_POSITIVE_REGULATION_OF_HEMOPOIESIS", "GOBP_POSITIVE_REGULATION_OF_T_CELL_MEDIATED_IMMUNITY", "GOBP_POSITIVE_REGULATION_OF_LYMPHOCYTE_DIFFERENTIATION", "GOBP_NIK_NF_KAPPAB_SIGNALING", "GOBP_CELLULAR_RESPONSE_TO_MOLECULE_OF_BACTERIAL_ORIGIN", "GOBP_POSITIVE_REGULATION_OF_ADAPTIVE_IMMUNE_RESPONSE", "GOBP_INFLAMMATORY_RESPONSE", "GOBP_CYTOKINE_PRODUCTION", "GOBP_MAPK_CASCADE", "GOBP_CELLULAR_EXTRAVASATION", "GOBP_LEUKOCYTE_TETHERING_OR_ROLLING", "GOBP_REGULATION_OF_MONOCYTE_CHEMOTAXIS", "REACTOME_SIGNALING_BY_INTERLEUKINS", "REACTOME_INNATE_IMMUNE_SYSTEM", "REACTOME_INTERLEUKIN_4_AND_INTERLEUKIN_13_SIGNALING", "REACTOME_NEUTROPHIL_DEGRANULATION", "REACTOME_INTERLEUKIN_10_SIGNALING", "REACTOME_CYTOKINE_SIGNALING_IN_IMMUNE_SYSTEM")

P4B <- do.call("rbind", GSEA_CD14) |> 
  as_tibble() |>  
  dplyr::select(c(1,5,6,7,8,9)) |>
  dplyr::mutate(Enrichment = ifelse(NES > 0, "Enriched", "Depleted"),
                order = NES, .by = ID) |> 
  dplyr::filter(ID %in% pathway_list) |> 
  dplyr::mutate(
    ID = paste0(
      str_split_fixed(ID, pattern = "_", n = 2)[,1], ": ", 
      stringr::str_to_sentence(str_split_fixed(ID, pattern = "_", n = 2)[,2]) |> 
        gsub(ID, pattern = "_", replacement = " "))) |> 
  ggplot(aes(x = NES, y = reorder(ID, order), fill = Enrichment, alpha = -log10(p.adjust))) + 
  geom_bar(stat = "identity") + 
  labs(title = NULL, x = "NES", y = NULL) +
  scale_x_continuous(position="bottom") +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  scale_fill_manual(values = c("Enriched" = "#5575B0", "Depleted" = "#3CB49F"), breaks = c("Enriched", "Depleted")) +
  custom_theme()


# TRRUST - CD14

tf_cd14 <- read_csv("../data/TRRUST_CD14.csv")

P4C <- tf_cd14 |> 
  mutate(order = desc(qvalue), .by = TF) |>
  head(20) |> 
  ggplot(aes(x = -log10(qvalue), y = reorder(TF, order))) +
  geom_bar(aes(fill = genes), stat = "identity") +
  xlab("-log10(p-adjust)") +
  ylab("Top 20 TF") +
  scale_fill_gradientn(colours = c('#5575B0', '#3CB49F'), na.value = "grey") +
  custom_theme()

P4_top <- cowplot::plot_grid(P4A, P4B, P4C, nrow = 1, labels = "AUTO", axis = "bt", align = "h")

ggsave(filename = "figures/Panel4/P4_top.png", 
       plot = P4_top,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")



# IL10 Module score

P4E <- seu_meta |> 
  select(orig.ident, Condition, cell_type, 30) |>
  dplyr::filter(cell_type == "CD14 Mono") |> 
  pivot_longer(cols = c(-orig.ident, -Condition, -cell_type ), 
               names_to = "source", 
               values_to = "score") |> 
  ggplot(aes(Condition, score, fill = Condition)) +
  geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "IL10 Module Score") +
  custom_theme() +
  scale_fill_manual(values = c("#5575B0", "#3CB49F")) +
  geom_signif(
    comparisons = list(c("Control", "FRDA")),
    map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()



# IL10 expressing cell proportion

P4F <- seu_meta |> 
    filter(cell_type == "CD14 Mono") |> 
    dplyr::select(orig.ident, Condition, il10) |> 
    group_by(orig.ident, Condition) |>
    summarise(prop = length(which(il10 > 0))/length(il10)) |> 
    ggplot(aes(Condition, prop, fill = Condition)) +
    geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "IL10 Proportion") +
  custom_theme() +
  scale_fill_manual(values = c("#5575B0", "#3CB49F")) +
  geom_signif(
        comparisons = list(c("Control", "FRDA")),
        map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()

P4_bottom <- cowplot::plot_grid(NULL, P4E, P4F, labels = c("D", "E", "F"), nrow = 1, axis = "bt", align = "h")

ggsave(filename = "figures/Panel4/P4_bottom.png", 
       plot = P4_bottom,
       units = "in", 
       width = 13,
       height = 8.5/2,
       dpi = 600,
       bg = "white")


P4_final <- cowplot::plot_grid(P4_top, P4_bottom, ncol = 1, axis = "lr", align = "v")

ggsave(filename = "figures/Panel4/P4_final.png", 
       plot = P4_final,
       units = "in", 
       width = 13,
       height = 8.5,
       dpi = 600,
       bg = "white")
```

### Panel 5 - CAD vs NCAD : CS-SCORE, 

```{r}
# CS-score

files <- c("RData/CSCORE/2024-11-29_coex_CAD_C.xlsx", "RData/CSCORE/2024-11-29_coex_CAD_NCAD.xlsx")

CS_CD14 <- lapply(files, function(file){
  sheets <- openxlsx::getSheetNames(file)
  lapply(setNames(sheets,sheets), function(sheet){
    openxlsx::read.xlsx(file, sheet)
    })
  })

names(CS_CD14) <- c("CAD_C", "CAD_NCAD")

M3 <- c("inflammatory response", "response to molecule of bacterial origin", "response to cytokine", "response to lipopolysaccharide", "positive regulation of immune system process", "interleukin-1 production", "positive regulation of cytokine production", "cell migration", "cytokine production", "regulation of response to biotic stimulus", "cell activation", "regulation of cell motility", "defense response to symbiont", "cytokine-mediated signaling pathway", "positive regulation of cell population proliferation", "activation of immune response", "interleukin-6 production", "T-helper 1 type immune response", "innate immune response", "immune response-activating signaling pathway", "central nervous system development", "cell chemotaxis", "positive regulation of type II interferon production", "G protein-coupled receptor signaling pathway", "T cell activation", "cell-cell adhesion", "type II interferon production", "lipopolysaccharide-mediated signaling pathway", "interleukin-12 production", "MAPK cascade", "negative regulation of non-canonical NF-kappaB signal transduction", "cell-cell junction organization", "monocyte chemotaxis", "macrophage chemotaxis", "granulocyte chemotaxis")

M9 <- c("granulocyte chemotaxis", "granulocyte migration", "leukocyte chemotaxis", "neutrophil chemotaxis", "neutrophil migration", "leukocyte migration", "innate immune response", "defense response to symbiont", "secretory granule")

M15 <- c("defense response to virus", "response to virus", "defense response to other organism", "interferon-mediated signaling pathway", "response to type I interferon", "innate immune response", "response to cytokine", "regulation of type I interferon production", "type I interferon production", "type I interferon-mediated signaling pathway", "cellular response to type I interferon")

# Module 9

P5A <- CS_CD14$CAD_NCAD$M9 |> 
  dplyr::select(c(1:10,13)) |> 
  filter(Description %in% M9) |> 
  mutate(GeneRatio = eval(parse(text = GeneRatio)),
         ID = paste0(ONTOLOGY, " : ", stringr::str_to_sentence(Description)),
         order = GeneRatio, .by = ID) |> 
  ggplot(aes(x = GeneRatio, y = reorder(ID, order),color = p.adjust, size = Count)) +
  geom_point() + 
  labs(x = "Gene Ratio", y = NULL, title = "Module 9") + 
  scale_color_gradientn(colours = c('#3CB49F', '#FFFFFF'), 
                        limit = c(min(CS_CD14$CAD_NCAD$M9$p.adjust), 
                                  max(CS_CD14$CAD_NCAD$M9$p.adjust)), 
                        na.value = "grey") +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  custom_theme()

# Module 15

P5B <- CS_CD14$CAD_NCAD$M15 |> 
    dplyr::select(c(1:10,13)) |> 
    filter(Description %in% M15) |> 
    mutate(GeneRatio = eval(parse(text = GeneRatio)),
           ID = paste0(ONTOLOGY, " : ", stringr::str_to_sentence(Description)),
           order = GeneRatio, .by = ID) |> 
    ggplot(aes(x = GeneRatio, y = reorder(ID, order), color = p.adjust, size = Count)) +
    geom_point() + 
    labs(x = "Gene Ratio", y = NULL, title = "Module 15") + 
    scale_color_gradientn(colours = c('#3CB49F', '#FFFFFF'), 
                          limit = c(min(CS_CD14$CAD_NCAD$M15$p.adjust),
                                    max(CS_CD14$CAD_NCAD$M15$p.adjust)), 
                          na.value = "grey") +
    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
    custom_theme()


P5_top <- cowplot::plot_grid(P5A, P5B, nrow = 1, labels = "AUTO", axis = "bt", align = "h")



# CAD NCAD - IL10

cad_ncad <- subset(x = seu_PBMC, subset = Condition2 %in% c("CAD", "NCAD"), idents = "CD14 Mono")

P5C <- cad_ncad@meta.data |>
  mutate(il10 = FetchData(cad_ncad, vars = "IL10")$IL10) |> 
  filter(cell_type == "CD14 Mono") |> 
  dplyr::select(orig.ident, Condition2, il10) |> 
  group_by(orig.ident, Condition2) |> 
  summarise(prop = length(which(il10 > 0))/length(il10)) |> 
  ggplot(aes(Condition2, prop, fill = Condition2)) +
  geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "IL10 Proportion") +
  custom_theme() +
  scale_fill_manual(values = c("#5575B0", "#3CB49F")) +
  geom_signif(
        comparisons = list(c("CAD", "NCAD")),
        map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()



# Clinical NLR

clin_nlr <- read_csv("../data/clinical_data.csv")


P5D <- clin_nlr |> 
  ggplot(aes(Condition, NLR, fill = Condition)) +
  geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "Neutrophil to Lymphocyte Ratio") +
  custom_theme() +
  scale_fill_manual(values = c("#5575B0", "#3CB49F")) +
  geom_signif(
        comparisons = list(c("CAD", "Non-CAD")),
        map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()


P5_bottom <- cowplot::plot_grid(P5C, P5D, nrow = 1, labels = c("C", "D"), axis = "bt", align = "h")

P5_final <- cowplot::plot_grid(P5_top, P5_bottom, ncol = 1)

ggsave(filename = "figures/Panel5/P5_final.png", 
       plot = P5_final,
       units = "in", 
       width = 8.5,
       height = 8.5,
       dpi = 600,
       bg = "white")




```


<!-- Panel 3: Neutrophils-IFN signaling: Metascape results, IFN pathway gene heatmap/scores, Neutrophil degranulation pathway genes heatmap/ pathway scores, TF-STAT1 signaling, PRR pathway score -->


```{r}
# Metascape results


# IFN pathway gene heatmap/scores

seu_WB@meta.data |> 
    select(orig.ident, Condition, cell_type, IFN1) |>
    filter(cell_type == "Neutrophil") |> 
    ggplot(aes(Condition, IFN1)) +
    geom_boxplot() + 
    stat_compare_means(aes(label = paste0("p = ", after_stat(p.format))))

# Neutrophil degranulation pathway genes heatmap/ pathway scores

seu_WB@meta.data |> 
    select(orig.ident, Condition, cell_type, NEUD) |>
    filter(cell_type == "Neutrophil") |> 
    ggplot(aes(Condition, NEUD)) +
    geom_boxplot() + 
    stat_compare_means(aes(label = paste0("p = ", after_stat(p.format))))

# TF-STAT1 signaling

t(as.matrix(seu_WB@assays$tfsulm@data)) |> 
  as.data.frame() |> 
  dplyr::mutate(cluster = Seurat::Idents(seu_WB),
                Condition = seu_WB@meta.data$Condition) |> 
  tidyr::pivot_longer(cols = c(-cluster, -Condition), 
                      names_to = "source", 
                      values_to = "score") |> 
  filter(source == "STAT1" & cluster == c("Neutrophil")) |> 
  ggplot(aes(Condition, score)) +
  # stat_dots(aes(fill = cluster), side = "left", justification = 1.05) +
  ggdist::stat_halfeye(aes(fill = cluster), adjust = .5, width = .7, justification = -.2, .width = 0, point_colour = NA) +
  geom_boxplot(aes(fill = cluster), width = 0.1, outlier.colour = "grey") + 
  facet_grid(~cluster) +
  theme_ggdist(base_size=18, base_family="Helvetica") +
  theme(text = element_text(size=18),
        axis.text.x = element_text(angle=0, hjust=.5, vjust = 0.5, color = "black"),
        axis.text.y = element_text(color = "black"),
        plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5),
        legend.position="none") +
  scale_fill_met_d(palette_name = "Egypt") +
  ggpubr::stat_compare_means(aes(label = paste0("p = ", after_stat(p.format))))


# PRR pathway score

seu_WB@meta.data |> 
    select(orig.ident, Condition, cell_type, RIG1) |>
    filter(cell_type == "Neutrophil") |> 
    ggplot(aes(Condition, RIG1)) +
    geom_boxplot() + 
    stat_compare_means(aes(label = paste0("p = ", after_stat(p.format))))



P5B <- t(as.matrix(seu_WB@assays$module_score@data)) |> 
    as.data.frame() |> 
    dplyr::mutate(cluster = Seurat::Idents(seu_WB),
                  Condition = seu_WB@meta.data$Condition,
    ) |> 
    tidyr::pivot_longer(cols = c(-cluster, -Condition), 
                        names_to = "source", 
                        values_to = "score") |> 
    filter(cluster == "Neutrophil" & !source == "NEU2") |> 
    mutate(source = str_sub(source, end = -2)) |> 
    ggplot(aes(Condition, score)) +
    ggdist::stat_halfeye(aes(fill = Condition), 
                         alpha = .8,
                         adjust = .5, 
                         width = .8, 
                         justification = -.2, 
                         .width = 0, 
                         point_colour = NA) +
    geom_boxplot(aes(fill = Condition), 
                 alpha = .8,
                 width = 0.1, 
                 outlier.colour = "grey") + 
    labs(x = NULL, y = "Module Score") +
    facet_grid(~source) +
    custom_theme() +
    scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
    geom_signif(
        comparisons = list(c("Control", "Patient")),
        map_signif_level = FALSE, textsize = 3
    ) &
    NoLegend()

ggsave(filename = "figures/PBMC/Panel5/figB.png", 
       plot = P5B,
       units = "in", 
       width = 8.5,
       height = 13/3,
       dpi = 600,
       bg = "white")

```


<!-- Panel 3: scRNAseq- PBMC (WB data in supplementary)- UMAPs, marker dot plot, DCAT proportions, DEG-upset plot (all cell types) -->

```{r}
DefaultAssay(seu_WB) <- "RNA"
Idents(seu_WB) <- "cell_type"

DefaultAssay(seu_PBMC) <- "RNA"
Idents(seu_PBMC) <- "cell_type"


# Whole blood (Supplementary)

S1A <- DimPlot(seu_WB, 
               reduction = "umap.harmony", 
               group.by = c("cell_type"), 
               pt.size = 1, 
               label = TRUE, 
               label.size = 5,
               cols = umap_col) & 
  labs(title = NULL, x = "UMAP1", y = "UMAP2") &
  NoLegend() &
  custom_theme() +
  empty_axis() +
  NoLegend()


markers_WB <- c("MKI67", "TOP2A", "CLEC4C", "NRP1", "FCER1A", "CLEC10A", "LYZ", "PPBP", "FCGR3A", "TNFRSF13B", "JCHAIN", "CD14", "KLRB1", "CD8A", "CD8B", "NKG7", "GNLY", "NCAM1", "CD79A", "MS4A1", "CD4", "CCR7", "ALPL", "MME")

S1B <- DotPlot(seu_WB, features = markers_WB, dot.scale = 3) + 
  scale_colour_gradient2(low = "#3288BD", mid = 'white', high = "#D53E4F") +
  RotatedAxis() +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) &
  labs(title = NULL, x = NULL, y = NULL)

ggsave(filename = "figures/WB/fig3C.png", 
       plot = S1B,
       units = "in", 
       width = 8.5/1.5,
       height = 13/3,
       dpi = 600,
       bg = "white")

# Figure 3A - UMAP - PBMC

P3A <- DimPlot(seu_PBMC, 
               reduction = "umap.harmony", 
               group.by = c("cell_type"), 
               pt.size = 0.5,
               label = TRUE, 
               label.size = 2,
               raster = FALSE,
               cols = umap_col) & 
  labs(title = NULL, x = "UMAP1", y = "UMAP2") &
  custom_theme() +
  empty_axis() &
  NoLegend()
  

# Figure 3B - Marker genes - Dot plot

markers_PBMC <- c("CD34", "TNFRSF17", "LEF1", "MKI67", "TOP2A", "CLEC4C", "NRP1", "KLRB1", "PTGDS", "FCER1A", "CLEC10A", "TNFRSF13B", "TRDC", "FCGR3A", "MS4A7", "PPBP", "CD8A", "CD79A", "MS4A1", "CCR7", "CCR4", "NKG7", "GNLY", "NCAM1", "CD14", "LYZ")

P3B <- DotPlot(seu_PBMC, features = markers_PBMC, dot.scale = 3) + 
  scale_colour_gradient2(low = "#3288BD", mid = 'white', high = "#D53E4F") +
  RotatedAxis() +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) &
  labs(title = NULL, x = NULL, y = NULL)

ggsave(filename = "figures/PBMC/fig3B.png", 
       plot = P3B,
       units = "in", 
       width = 8.5/1.5,
       height = 13/3,
       dpi = 600,
       bg = "white")


P3AB <- cowplot::plot_grid(P3A, P3B, nrow = 1, rel_widths = c(0.8, 1.2), labels = c("A", "B"))

ggsave(filename = "figures/PBMC/fig3AB.png", 
       plot = P3AB,
       units = "in", 
       width = 8.5,
       height = 13/4,
       dpi = 600,
       bg = "white")


P3B_S1B <- cowplot::plot_grid(P3B, S1B, nrow = 1, align = "v")

ggsave(filename = "figures/PBMC/fig3B_S2B.png", 
       plot = P3B_S1B,
       units = "in", 
       width = 8.5/2,
       height = 13/2,
       dpi = 600,
       bg = "white")

# Figure 3C - Cell proportion

# dcats_df <- run_dcats(seu_PBMC)
# write_rds(dcats_df, paste0("RData/", Sys.Date(),"_dcats-df.rds"))

dcats_PBMC <- read_rds("RData/2025-02-13_dcats-df.rds")


anno_df <- dcats_PBMC[dcats_PBMC$LRT_pvals < 0.05,] |> 
    mutate(start = c(0.75, 8.75, 11.75, 13.75), 
           end = c(1.25, 9.25, 12.25, 14.25),
           y = c(72, 72, 70, 70))

# P3C <- seu_PBMC@meta.data |> 
#   count(cell_type, Condition) |> 
#   mutate(dcats = rep(dcats_df$LRT_pvals, each = 2)) |> 
#   group_by(cell_type) |> 
#   mutate(prop = n / sum(n),
#          stars = case_when(
#            dcats < 0.001 ~ "***",
#            dcats < 0.01 ~ "**",
#            dcats < 0.05 ~ "*",
#            TRUE ~ "")) |> 
#   ggplot(aes(x = cell_type, y = prop * 100, fill = Condition)) +
#   geom_col(position = position_dodge()) +
#   geom_text(aes(cell_type, label = round(100 * prop)),
#             position = position_dodge(.9), vjust = -.2) +
#   geom_text(aes(label = stars), 
#             position = position_dodge(.9), vjust = -1.5) +
#   scale_fill_manual(values = c("#3288BD", "#D53E4F")) +
#   labs(x = "Cell type", y = "Relative abundance (%)") +
#   custom_theme() +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
#         legend.text = element_text(size=rel(1.15)))

seu_meta <- read_rds("RData/2025-02-10_seu_PBMC_meta.rds")

P3C <- seu_meta |> 
    count(cell_type, Condition) |> 
    # mutate(dcats = rep(dcats_df$LRT_pvals, each = 2)) |> 
    group_by(cell_type) |> 
    mutate(prop = n / sum(n)) |> 
    ggplot(aes(x = cell_type, y = prop * 100, fill = Condition)) +
    geom_col(position = position_dodge(), width = 0.9, alpha = 0.8) +
    geom_text(aes(cell_type, label = round(100 * prop)),
              position = position_dodge(.9), vjust = -.2, size = 2) +
    geom_signif(annotations = formatC(anno_df$LRT_pvals, digits = 2),
                xmin = anno_df$start, 
                xmax = anno_df$end,
                y_position = anno_df$y,
                textsize = 2, size = 0.2) +
    scale_fill_manual(values = c("#3288BD", "#D53E4F")) +
    labs(x = "", y = "Relative abundance (%)") +
    custom_theme() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
          legend.text = element_text(size=rel(1.15))) +
    theme(legend.position = "top")



seu_meta |> 
    count(cell_type, Condition) |> 
    mutate(dcats = rep(dcats_PBMC$LRT_pvals, each = 2),
           stars = case_when(
               dcats < 0.001 ~ "***",
               dcats < 0.01 ~ "**",
               dcats < 0.05 ~ "*",
               TRUE ~ "")) |> 
    group_by(cell_type) |> 
    mutate(prop = n / sum(n)) -> dcats_df

dcats_df$cell_type <- reorder(dcats_df$cell_type, ifelse(!dcats_df$Condition %in% "FRDA", 0, dcats_df$prop), FUN = sum)

ggplot(dcats_df, aes(x = cell_type, y = n, fill = Condition)) +
    geom_col(position = "fill", width = 0.9) +
    geom_text(aes(y = 1, label = stars, group = cell_type), color = "black") +
    scale_fill_manual(values = c("#3CB49F", "#5575B0")) +
    scale_y_continuous(labels = scales::percent) +
    labs(x = "", y = "Relative abundance (%)") +
    custom_theme() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
          legend.text = element_text(size=rel(1.15))) +
    theme(legend.position = "top")


ggsave(filename = "figures/PBMC/fig3C.png", 
       plot = P3C,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")

# Figure 4C - DEG-upset plot (all cell types)


DGE_pbmc <- read_rds("RData/2024-09-26_DGE_sc_pbmc.rds")

DGE_pbmc_filt <- lapply(DGE_pbmc, function(df){
  df |> filter(abs(avg_log2FC) > 1 & p_val_adj < 0.05)
})

summary_df <- lapply(names(DGE_pbmc_filt), function(cell_type) {
  df <- DGE_pbmc_filt[[cell_type]]
  up <- nrow(filter(df, avg_log2FC > 1 & p_val_adj < 0.05))
  down <- nrow(filter(df, avg_log2FC < -1 & p_val_adj < 0.05))
  data.frame(
    CellType = cell_type,
    Upregulated = up,
    Downregulated = down
  )
}) |> 
  bind_rows() |> 
  pivot_longer(cols = c(Upregulated, Downregulated), 
               names_to = "Regulation", 
               values_to = "Count")


P3D <- summary_df |> 
  mutate(CellType = fct_reorder(CellType, Count, sum, .desc=FALSE)) |> 
  ggplot(aes(x = CellType, y = Count, fill = Regulation)) +
  ggchicklet::geom_chicklet(width = 0.75) +
  scale_y_continuous(position = "right") +
  scale_fill_manual(
    name = NULL,
    values = c(
      "Downregulated" = "#D53E4F",
      "Upregulated" = "#3288BD"
      ),
    breaks = rev(setdiff(unique(summary_df$Regulation), "Regulation"))
    ) +
  guides(
    fill = guide_legend(nrow = 1)
    ) +
  labs(x = NULL, y = NULL, fill = NULL) +
  coord_flip() +
  theme_ipsum_rc(grid="X", base_family = "Helvetica", base_size = 6) +
  theme(legend.position = "top")

ggsave(filename = "figures/PBMC/fig3D.png", 
       plot = P3D,
       units = "in", 
       width = 8.5/2,
       height = 13/4,
       dpi = 600,
       bg = "white")

P3CD <- cowplot::plot_grid(P3C, P3D, nrow = 1, rel_widths = c(1, 1), labels = c("C", "D"))

ggsave(filename = "figures/PBMC/fig3CD.png", 
       plot = P3CD,
       units = "in", 
       width = 8.5,
       height = 13/2,
       dpi = 600,
       bg = "white")

```


<!-- Panel 4: CD14 monocytes-immunomodulation: imbalance score, Volcano plot of DEGs, pathway analysis (GSEA KEGG, BP), Cell Chat, TF analysis -->

```{r}
#  P3A - Imbalance score

imb_df <- read_rds("RData/2024-12-09_imbalance_score.rds")

P3A <- ggplot(imb_df, aes(x = umapharmony_1, y = umapharmony_2, col = scores)) +
  geom_point(size = 2, alpha = 0.8) +
  scale_color_gradientn(colours = palette7) +
  labs(title = NULL, x = "UMAP1", y = "UMAP2") +
  custom_theme() +
  empty_axis()

ggsave(filename = "figures/PBMC/Panel3/figA.png", 
       plot = P3A,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")


# P3B - Volcano plot of DEGs

DGE_PBMC <- read_rds("RData/2024-09-26_DGE_sc_res_1.rds")

avg.cd14.mono <- read_rds("RData/avg.cd14.mono.rds")

DGE_PBMC$`CD14 Mono` |> 
    mutate(
        Expression = case_when(
            avg_log2FC >= 1 & p_val_adj <= 0.01 ~ "Upregulated",
            avg_log2FC <= -1 & p_val_adj <= 0.01 ~ "Downregulated",
            TRUE ~ "Not significant")) |>
    merge(avg.cd14.mono, by.x = "gene", by.y = "gene") -> CD14_plot_data


P3B <- CD14_plot_data |> 
  ggplot(aes(Control, FRDA)) + 
  geom_point(aes(color = Expression, alpha = 0.8)) + 
  ggtitle("CD14 Mono") + 
  ggrepel::geom_text_repel(data = head(CD14_plot_data |> 
                                         filter(abs(avg_log2FC) > 2 & p_val_adj < 0.01 & !is.na(description)) |>
                                         arrange(p_val_adj, desc(abs(avg_log2FC))), 20), 
                           aes(label = gene), 
                           max.overlaps = 20, 
                           force = 20, 
                           segment.size = 0.2,
                           segment.curvature = -0.1,
                           size = 2) +
  scale_color_manual(values = c("#3288BD", "grey", "#D53E4F")) +
  guides(alpha = "none", size = "none") +
  custom_theme()

ggsave(filename = "figures/PBMC/Panel3/figB.png", 
       plot = P3B,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")

# P3C - pathway analysis (GSEA KEGG, BP)

files <- c("RData/gsea/2024-09-26_GSEA_REACTOME.xlsx", "RData/gsea/2024-09-26_GSEA_BP.xlsx")

GSEA_CD14 <- lapply(files, function(file){
  openxlsx::read.xlsx(file, "CD14 Mono")
})

names(GSEA_CD14) <- c("REACTOME", "BP")

pathway_list <- c("GOBP_POSITIVE_REGULATION_OF_HEMOPOIESIS", "GOBP_POSITIVE_REGULATION_OF_T_CELL_MEDIATED_IMMUNITY", "GOBP_POSITIVE_REGULATION_OF_LYMPHOCYTE_DIFFERENTIATION", "GOBP_NIK_NF_KAPPAB_SIGNALING", "GOBP_CELLULAR_RESPONSE_TO_MOLECULE_OF_BACTERIAL_ORIGIN", "GOBP_POSITIVE_REGULATION_OF_ADAPTIVE_IMMUNE_RESPONSE", "GOBP_INFLAMMATORY_RESPONSE", "GOBP_CYTOKINE_PRODUCTION", "GOBP_MAPK_CASCADE", "GOBP_CELLULAR_EXTRAVASATION", "GOBP_LEUKOCYTE_TETHERING_OR_ROLLING", "GOBP_REGULATION_OF_MONOCYTE_CHEMOTAXIS", "REACTOME_SIGNALING_BY_INTERLEUKINS", "REACTOME_INNATE_IMMUNE_SYSTEM", "REACTOME_INTERLEUKIN_4_AND_INTERLEUKIN_13_SIGNALING", "REACTOME_NEUTROPHIL_DEGRANULATION", "REACTOME_INTERLEUKIN_10_SIGNALING", "REACTOME_CYTOKINE_SIGNALING_IN_IMMUNE_SYSTEM")

do.call("rbind", GSEA_CD14) |> 
  as_tibble() |>  
  dplyr::select(c(1,5,6,7,8,9)) |>
  dplyr::mutate(Enrichment = ifelse(NES > 0, "Enriched", "Depleted"),
                order = NES, .by = ID) |> 
  dplyr::filter(ID %in% pathway_list) |> 
  dplyr::mutate(
    ID = paste0(
    str_split_fixed(ID, pattern = "_", n = 2)[,1], ": ", 
    stringr::str_to_sentence(str_split_fixed(ID, pattern = "_", n = 2)[,2]) |> 
      gsub(ID, pattern = "_", replacement = " "))) |> 
  ggplot(aes(x = NES, y = reorder(ID, order), fill = Enrichment)) + 
  geom_bar(stat = "identity", alpha = 0.8) + 
  scale_x_continuous(position="bottom") +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  scale_fill_manual(values = c("#3288BD", "#D53E4F")) +
  custom_theme()

P3C <- do.call("rbind", GSEA_CD14) |> 
  as_tibble() |>  
  dplyr::select(c(1,5,6,7,8,9)) |>
  dplyr::mutate(Enrichment = ifelse(NES > 0, "Enriched", "Depleted"),
                order = NES, .by = ID,
                top = c("top")) |> 
  dplyr::filter(ID %in% pathway_list) |> 
  dplyr::mutate(
    ID = paste0(
    str_split_fixed(ID, pattern = "_", n = 2)[,1], ": ", 
    stringr::str_to_sentence(str_split_fixed(ID, pattern = "_", n = 2)[,2]) |> 
      gsub(ID, pattern = "_", replacement = " "))) |> 
  ggplot(aes(x = top, y = reorder(ID, order))) + 
  geom_point(aes(color = Enrichment, size = abs(NES))) +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  scale_color_manual(values = c("#3288BD", "#D53E4F")) +
  custom_theme()

P3C <- do.call("rbind", GSEA_CD14) |> 
    as_tibble() |>  
    dplyr::select(c(1,5,6,7,8,9)) |>
    dplyr::mutate(Enrichment = ifelse(NES > 0, "Enriched", "Depleted"),
                  order = NES, .by = ID) |> 
    dplyr::filter(ID %in% pathway_list) |> 
    dplyr::mutate(
        ID = paste0(
            str_split_fixed(ID, pattern = "_", n = 2)[,1], ": ", 
            stringr::str_to_sentence(str_split_fixed(ID, pattern = "_", n = 2)[,2]) |> 
                gsub(ID, pattern = "_", replacement = " "))) |> 
    ggplot(aes(x = NES, y = reorder(ID, order), fill = Enrichment, alpha = 1 - p.adjust)) + 
    geom_bar(stat = "identity") + 
    labs(title = NULL, x = "NES", y = NULL) +
    scale_x_continuous(position="bottom") +
    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
    scale_fill_manual(values = c("Enriched" = "#3288BD", "Depleted" = "#D53E4F"), breaks = c("Enriched", "Depleted")) +
    # scale_alpha_continuous(range = c(0.3, 1), guide = "none") +
    custom_theme()


ggsave(filename = "figures/PBMC/Panel3/figC.png", 
       plot = P3C,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")


# Cell Chat

# average enrichment of TF in Condition for each cell type

df <- t(as.matrix(seu_PBMC@assays$tfsulm@data)) |> 
  as.data.frame() |> 
  dplyr::mutate(cluster = seu_PBMC$cell_type,
                condition = seu_PBMC$Condition)|> 
  tidyr::pivot_longer(cols = c(-cluster, -condition), 
                      names_to = "source", 
                      values_to = "score") |> 
  dplyr::group_by(cluster, source, condition) |> 
  dplyr::summarise(mean = mean(score))

tfs <- df |> 
  dplyr::group_by(source, cluster) |> 
  dplyr::summarise(std = stats::sd(mean)) |> 
  dplyr::arrange(-abs(std)) |> 
  head(25) |> 
  dplyr::pull(source)

df |> 
  dplyr::filter(source %in% tfs & cluster == "CD14 Mono") |> 
  tidyr::pivot_wider(id_cols = c('condition'), 
                     names_from = 'source',
                     values_from = 'mean') |>
  tibble::column_to_rownames('condition') |> 
  as.matrix() -> top_acts_mat

colors <- rev(RColorBrewer::brewer.pal(n = 11, name = "RdBu"))
colors.use <- grDevices::colorRampPalette(colors = colors)(100)

my_breaks <- c(seq(-2, 0, length.out = ceiling(100 / 2) + 1),
               seq(0.05, 2, length.out = floor(100 / 2)))

pheatmap::pheatmap(mat = top_acts_mat,
                   color = colors.use,
                   border_color = "white",
                   breaks = my_breaks,
                   cellwidth = 15,
                   cellheight = 15,
                   treeheight_row = 20,
                   treeheight_col = 20)

apply(seu_PBMC[['tfsulm']]@data[tfs, ], 1, FUN=function(x)sum(is.na(x)))


# TRRUST analysis
tf_trrust <- read_csv("../data/TRRUST_CD14.csv")

P3D <- tf_trrust |> 
    mutate(order = desc(qvalue), .by = TF) |>
    head(20) |> 
    ggplot(aes(x = -log10(qvalue), y = reorder(TF, order))) +
    geom_bar(aes(fill = genes), stat = "identity") +
    xlab("-log10(p-adjust)") +
    ylab("Top 20 TF") +
    scale_fill_gradientn(colours = c('#FEE08B', '#D53E4F'), na.value = "grey") +
    custom_theme()

ggsave(filename = "figures/PBMC/Panel3/figD.png", 
       plot = P3D,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")

```


<!-- Panel 5: IL-10 producing monocytes: Il-10 levels in FA vs HC, IL-10 pathway genes (Reactome) heatmap, IL-10 producing cells proportion -->

```{r}
# Il-10 levels in FA vs HC (Module score)

P4A <- seu_meta |> 
    select(orig.ident, Condition, cell_type, 30) |>
    dplyr::filter(cell_type == "CD14 Mono") |> 
    pivot_longer(cols = c(-orig.ident, -Condition, -cell_type ), 
                 names_to = "source", 
                 values_to = "score") |> 
    ggplot(aes(Condition, score, fill = Condition)) +
    geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "IL10 Module Score") +
    custom_theme() +
    scale_fill_manual(values = c("#3288BD", "#D53E4F")) +
    geom_signif(
        comparisons = list(c("Control", "FRDA")),
        map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()

ggsave(filename = "figures/PBMC/Panel4/figA.png", 
       plot = P4A,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")



seu_meta |> 
    select(orig.ident, Condition, cell_type, 30) |>
    dplyr::filter(cell_type == "CD14 Mono") |> 
    pivot_longer(cols = c(-orig.ident, -Condition, -cell_type ), 
                 names_to = "source", 
                 values_to = "score") |> 
    ggplot(aes(Condition, score)) +
    ggdist::stat_halfeye(aes(fill = Condition), adjust = .5, width = .4, justification = -.2, .width = 0, point_colour = NA) +
    geom_boxplot(aes(fill = Condition), width = 0.1, outlier.colour = "grey") + 
    geom_signif(
        comparisons = list(c("Control", "FRDA")),
        map_signif_level = FALSE, textsize = 3
    )

# IL-10 pathway genes (Reactome) heatmap

gene_sets <- msigdbr::msigdbr(species = "Homo sapiens")
gene_sets <- gene_sets[gene_sets$gene_symbol %in% rownames(seu_PBMC@assays$RNA@features@.Data),]
il10_glist <- gene_sets[gene_sets$gs_name == "REACTOME_INTERLEUKIN_10_SIGNALING", ]$gene_symbol |> unique()

t(as.matrix(seu_PBMC@assays$RNA$data[il10_glist,])) |> 
    as.data.frame() |> 
    dplyr::mutate(cluster = seu_PBMC$cell_type,
                  condition = seu_PBMC$Condition)|> 
    tidyr::pivot_longer(cols = c(-cluster, -condition), 
                        names_to = "source", 
                        values_to = "score") |> 
    dplyr::group_by(cluster, source, condition) |> 
    dplyr::summarise(mean = mean(score)) |> 
    dplyr::filter(cluster == "CD14 Mono" & !is.na(condition)) |> 
    tidyr::pivot_wider(id_cols = c('condition'), 
                       names_from = 'source',
                       values_from = 'mean') |>
    tibble::column_to_rownames('condition') |>
    as.matrix() -> il10_mat

pheatmap::pheatmap(mat = il10_mat,
                   color = colors.use,
                   border_color = "white",
                   cellwidth = 15,
                   cellheight = 15,
                   treeheight_row = 20,
                   treeheight_col = 20)

DoHeatmap(subset(seu_PBMC, subset = cell_type == "CD14 Mono"), features = il10_glist, cells = 1:33000, group.by = "Condition")

# IL-10 producing cells proportion

P4C <- seu_meta |> 
    filter(cell_type == "CD14 Mono") |> 
    dplyr::select(orig.ident, Condition, il10) |> 
    group_by(orig.ident, Condition) |>
    summarise(prop = length(which(il10 > 0))/length(il10)) |> 
    ggplot(aes(Condition, prop, fill = Condition)) +
    geom_boxplot(width = 0.5, alpha = 0.8, outlier.colour = "grey") + 
  labs(x = NULL, y = "IL10 Proportion") +
  custom_theme() +
  scale_fill_manual(values = c("#3288BD", "#D53E4F")) +
  geom_signif(
        comparisons = list(c("Control", "FRDA")),
        map_signif_level = FALSE, textsize = 3
    ) &
  NoLegend()

ggsave(filename = "figures/PBMC/Panel4/figC.png", 
       plot = P4C,
       units = "in", 
       width = 8.5/2,
       height = 13/3,
       dpi = 600,
       bg = "white")

P4AC <- cowplot::plot_grid(P4A, P4C, nrow = 1, align = "h")

ggsave(filename = "figures/PBMC/Panel4/figAC.png", 
       plot = P4AC,
       units = "in", 
       width = 8.5,
       height = 13/3,
       dpi = 600,
       bg = "white")

```





<!-- Panel 7: Monocyte IL-10- Neutrophil IFN axis associated with cardiomyopathy: WGCNA (bulk)- cardiac hypertrophy/ IL-10 signaling genes; CS-score, Il-10 levels in CAD vs NCAD, NLR ratio in CAD vs NCAD, Neutrophil genes- KLF2- cardiomyopathy -->

```{r}
# CS-score

files <- c("RData/CSCORE/2024-11-29_coex_CAD_C.xlsx", "RData/CSCORE/2024-11-29_coex_CAD_NCAD.xlsx")

CS_CD14 <- lapply(files, function(file){
  sheets <- openxlsx::getSheetNames(file)
  lapply(setNames(sheets,sheets), function(sheet){
    openxlsx::read.xlsx(file, sheet)
    })
  })

names(CS_CD14) <- c("CAD_C", "CAD_NCAD")

M3 <- c("inflammatory response", "response to molecule of bacterial origin", "response to cytokine", "response to lipopolysaccharide", "positive regulation of immune system process", "interleukin-1 production", "positive regulation of cytokine production", "cell migration", "cytokine production", "regulation of response to biotic stimulus", "cell activation", "regulation of cell motility", "defense response to symbiont", "cytokine-mediated signaling pathway", "positive regulation of cell population proliferation", "activation of immune response", "interleukin-6 production", "T-helper 1 type immune response", "innate immune response", "immune response-activating signaling pathway", "central nervous system development", "cell chemotaxis", "positive regulation of type II interferon production", "G protein-coupled receptor signaling pathway", "T cell activation", "cell-cell adhesion", "type II interferon production", "lipopolysaccharide-mediated signaling pathway", "interleukin-12 production", "MAPK cascade", "negative regulation of non-canonical NF-kappaB signal transduction", "cell-cell junction organization", "monocyte chemotaxis", "macrophage chemotaxis", "granulocyte chemotaxis")

M9 <- c("granulocyte chemotaxis", "granulocyte migration", "leukocyte chemotaxis", "neutrophil chemotaxis", "neutrophil migration", "leukocyte migration", "innate immune response", "defense response to symbiont", "secretory granule")

M15 <- c("defense response to virus", "response to virus", "defense response to other organism", "interferon-mediated signaling pathway", "response to type I interferon", "innate immune response", "response to cytokine", "regulation of type I interferon production", "type I interferon production", "type I interferon-mediated signaling pathway", "cellular response to type I interferon")

p1 <- CS_CD14$CAD_NCAD$M3 |> 
  dplyr::select(c(1:10,13)) |> 
  filter(Description %in% M3) |> 
  mutate(GeneRatio = eval(parse(text = GeneRatio)),
         ID = paste0(ONTOLOGY, " : ", stringr::str_to_sentence(Description)),
         order = GeneRatio, .by = ID) |> 
  ggplot(aes(x = GeneRatio, y = reorder(ID, order),color = p.adjust, size = Count)) +
  geom_point() + 
  labs(x = "Gene Ratio", y = NULL, title = "Module 3") + 
  scale_color_gradientn(colours = c('#D53E4F', '#FFFFFF'), limit = c(min(CS_CD14$CAD_NCAD$M3$p.adjust), max(CS_CD14$CAD_NCAD$M3$p.adjust)), na.value = "grey") +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  custom_theme()


ggsave(filename = "figures/PBMC/Panel6/figA.png", 
       plot = p1,
       units = "in", 
       width = 8.5/1.5,
       height = 13/2,
       dpi = 600,
       bg = "white")


p2 <- CS_CD14$CAD_NCAD$M9 |> 
  dplyr::select(c(1:10,13)) |> 
  filter(Description %in% M9) |> 
  mutate(GeneRatio = eval(parse(text = GeneRatio)),
         ID = paste0(ONTOLOGY, " : ", stringr::str_to_sentence(Description)),
         order = GeneRatio, .by = ID) |> 
  ggplot(aes(x = GeneRatio, y = reorder(ID, order),color = p.adjust, size = Count)) +
  geom_point() + 
  labs(x = "Gene Ratio", y = NULL, title = "Module 9") + 
  scale_color_gradientn(colours = c('#D53E4F', '#FFFFFF'), limit = c(min(CS_CD14$CAD_NCAD$M9$p.adjust), max(CS_CD14$CAD_NCAD$M9$p.adjust)), na.value = "grey") +
  scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
  custom_theme()

ggsave(filename = "figures/PBMC/Panel6/figB.png", 
       plot = p2,
       units = "in", 
       width = 8.5/1.5,
       height = 13/2,
       dpi = 600,
       bg = "white")

p3 <- CS_CD14$CAD_NCAD$M15 |> 
    dplyr::select(c(1:10,13)) |> 
    filter(Description %in% M15) |> 
    mutate(GeneRatio = eval(parse(text = GeneRatio)),
           ID = paste0(ONTOLOGY, " : ", stringr::str_to_sentence(Description)),
           order = GeneRatio, .by = ID) |> 
    ggplot(aes(x = GeneRatio, y = reorder(ID, order), color = p.adjust, size = Count)) +
    geom_point() + 
    labs(x = "Gene Ratio", y = NULL, title = "Module 15") + 
    scale_color_gradientn(colours = c('#D53E4F', '#FFFFFF'), limit = c(min(CS_CD14$CAD_NCAD$M15$p.adjust), max(CS_CD14$CAD_NCAD$M15$p.adjust)), na.value = "grey") +
    scale_y_discrete(labels = function(x) stringr::str_wrap(x, width = 50)) +
    custom_theme()

ggsave(filename = "figures/PBMC/Panel6/figC.png", 
       plot = p3,
       units = "in", 
       width = 8.5/1.5,
       height = 13/2,
       dpi = 600,
       bg = "white")

wrap_plots(p1,p2,p3)

ggsave(filename = "figures/PBMC/Panel6/figAll.png", 
       plot = wrap_plots(p1,p2,p3),
       units = "in", 
       width = 15,
       height = 13/2,
       dpi = 600,
       bg = "white")

```





















