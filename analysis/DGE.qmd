---
title: "DGE"
format: html
editor: source
author: viv3kanand
date: "`r format(Sys.time(), '%d %B, %Y')`"
---

```{r}
require(Seurat)
require(DESeq2)
require(tidyverse)
```

## Bulk RNA-Seq

### load data

```{r}
count_bulk <- read_csv("../data/Bulk/FRDA_bulk_counts.csv") |> 
  dplyr::distinct(Gene, .keep_all = TRUE) |> 
  tibble::column_to_rownames("Gene")

meta_bulk <- read_csv("../data/Bulk/Metadata_bulk.csv") |>
  tibble::column_to_rownames("SampleID")

identical(colnames(count_bulk), rownames(meta_bulk))

```


```{r}
dds <- DESeq2::DESeqDataSetFromMatrix(countData = count_bulk,
                                      colData = meta_bulk, 
                                      design = ~ Condition + Batch + Gender + Sampling_Age)

keep <- rowSums(counts(dds) >= 5) >= 3
table(keep)
dds <- dds[keep,]

suppressWarnings(dds <- DESeq2::DESeq(dds, 
                              parallel = TRUE, 
                              BPPARAM=BiocParallel::MulticoreParam(20)))

res <- results(dds, name = "Condition_Patient_vs_Control") |> as.data.frame()



```



## scRNA-Seq Data

### Load data

```{r}
#| label: load data
#| echo: true
#| eval: false

seu_WB <- read_rds(paste0("RData/", Sys.Date(), "_seurat_WB.rds"))
seu_PBMC <- read_rds(paste0("RData/", Sys.Date(), "_seurat_PBMC.rds"))

DefaultAssay(seu_WB) <- "RNA"
Idents(seu_WB) <- "cell_type"

DefaultAssay(seu_PBMC) <- "RNA"
Idents(seu_PBMC) <- "cell_type"

annotations <- read_rds("RData/annotations.rda")

```

### Differential Expression Analysis (Pseudobulk)

#### FRDA vs Control (PBMC)

```{r}
bulk <- AggregateExpression(seu_PBMC,
                            return.seurat = TRUE, #aggregated values are placed in the 'counts' layer
                            assays = "RNA", 
                            group.by = c("orig.ident", "cell_type", "Condition"))


DGE_bulk <- lapply(
  setNames(unique(bulk$cell_type), unique(bulk$cell_type)), function(celltype) {
    subset.bulk <- subset(bulk, cell_type == celltype)
    Idents(subset.bulk) <- "Condition"
    de_markers <- FindMarkers(subset.bulk, 
                              ident.1 = "FRDA",
                              ident.2 = "Control", 
                              slot = "counts", 
                              test.use = "DESeq2",
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

write_rds(DGE_bulk, paste0("RData/", Sys.Date(), "_DGE_bulk_res_PBMC.rds"))

```


```{r}
dge_bulk <- read_csv("../data/Bulk/DEseq2-gene-batch-corrected-14Nov22.csv")

bulk <- AggregateExpression(seu_PBMC,
                            return.seurat = TRUE, #aggregated values are placed in the 'counts' layer
                            assays = "RNA", 
                            group.by = c("orig.ident", "Condition"))


Idents(bulk) <- "Condition"

DGE_bulk <- FindMarkers(bulk, 
                        ident.1 = "FRDA",
                        ident.2 = "Control", 
                        slot = "counts", 
                        test.use = "DESeq2",
                        verbose = TRUE) |> 
  rownames_to_column(var = "gene")

DGE_sc_bulk_combined <- DGE_bulk |>
  left_join(y = unique(dge_bulk[, c("Gene", "log2FoldChange", "padj")]), by = c("gene" = "Gene")) |> 
  na.omit()

DGE_sc_bulk_combined_sig <- DGE_sc_bulk_combined |> filter(padj < 0.05 & p_val_adj < 0.05)

write_rds(DGE_bulk, paste0("RData/", Sys.Date(), "_DGE_bulk_all_PBMC.rds"))

write_csv(DGE_bulk, file = paste0("RData/", Sys.Date(), "DGE_bulk_all.csv"))
write_csv(DGE_sc_bulk_combined, file = paste0("RData/", Sys.Date(), "DGE_bulk_all_combined.csv"))


pca_dat <- prcomp(t(as.data.frame(bulk@assays$RNA$counts)), scale = TRUE)

pca_dat |> 
    augment(bulk@meta.data) |> 
    ggplot(aes(.fittedPC1, .fittedPC2, color = Condition)) + 
    geom_point(size = 1.5) +
    scale_color_manual(
        values = c(FRDA = "#D55E00", Control = "#0072B2")
    )

```

### CAD vs NCAD (PBMC)

```{r}
bulk <- AggregateExpression(seu_PBMC, # NA columns will be ignored
                            return.seurat = TRUE, #aggregated values are placed in the 'counts' layer
                            assays = "RNA", 
                            group.by = c("orig.ident", "cell_type", "Condition2"))

bulk_CAD_C <- lapply(
  setNames(unique(bulk$cell_type), unique(bulk$cell_type)), function(celltype) {
    subset.bulk <- subset(bulk, cell_type == celltype)
    Idents(subset.bulk) <- "Condition2"
    de_markers <- FindMarkers(subset.bulk, 
                              ident.1 = "CAD",
                              ident.2 = "Control", 
                              slot = "counts", 
                              test.use = "DESeq2",
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
            by = c("gene" = "gene_name"))
    
    return(de_markers)
})

bulk_NCAD_C <- lapply(
  setNames(unique(bulk$cell_type), unique(bulk$cell_type)), function(celltype) {
    subset.bulk <- subset(bulk, cell_type == celltype)
    Idents(subset.bulk) <- "Condition2"
    de_markers <- FindMarkers(subset.bulk, 
                              ident.1 = "NCAD",
                              ident.2 = "Control", 
                              slot = "counts", 
                              test.use = "DESeq2",
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

bulk_CAD_NCAD <- lapply(
  setNames(unique(bulk$cell_type), unique(bulk$cell_type)), function(celltype) {
    subset.bulk <- subset(bulk, cell_type == celltype)
    Idents(subset.bulk) <- "Condition2"
    de_markers <- FindMarkers(subset.bulk, 
                              ident.1 = "CAD",
                              ident.2 = "NCAD", 
                              slot = "counts", 
                              test.use = "DESeq2",
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

bulk_DGE <- list("bulk_CAD_C" = bulk_CAD_C, "bulk_NCAD_C" = bulk_NCAD_C, "bulk_CAD_NCAD" = bulk_CAD_NCAD)

write_rds(bulk_DGE, paste0("RData/", Sys.Date(),"_DGE_bulk.rds"))

```

#### FRDA vs Control (Whole Blood)

```{r}
bulk <- AggregateExpression(seu_WB,
                            return.seurat = TRUE, #aggregated values are placed in the 'counts' layer
                            assays = "RNA", 
                            group.by = c("orig.ident", "cell_type", "Condition"))


DGE_bulk <- lapply(
  setNames(unique(bulk$cell_type), unique(bulk$cell_type)), function(celltype) {
    subset.bulk <- subset(bulk, cell_type == celltype)
    Idents(subset.bulk) <- "Condition"
    de_markers <- FindMarkers(subset.bulk, 
                              ident.1 = "FRDA",
                              ident.2 = "Control", 
                              slot = "counts", 
                              test.use = "DESeq2",
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

write_rds(DGE_bulk, paste0("RData/", Sys.Date(), "_DGE_bulk_res_WB.rds"))

```

### Differential Expression Analysis (Single cell resolution)

#### FRDA vs Control (PBMC)

```{r}
DGE_sc <- lapply(
  setNames(unique(seu_PBMC$cell_type), unique(seu_PBMC$cell_type)), function(celltype) {
    subset.sc <- subset(seu_PBMC, cell_type == celltype)
    Idents(subset.sc) <- "Condition"
    de_markers <- FindMarkers(subset.sc, 
                              ident.1 = "FRDA",
                              ident.2 = "Control", 
                              only.pos = FALSE, 
                              logfc.threshold = 0.25,
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

write_rds(DGE_sc, paste0("RData/", Sys.Date(), "_DGE_sc_res_PBMC.rds"))

```

#### CAD vs NCAD (PBMC)

```{r}
sc_CAD_C <- lapply(
  setNames(unique(seu_PBMC$cell_type), unique(seu_PBMC$cell_type)), function(celltype) {
    subset.sc <- subset(seu_PBMC, cell_type == celltype)
    Idents(subset.sc) <- "Condition2"
    de_markers <- FindMarkers(subset.sc, 
                              ident.1 = "CAD",
                              ident.2 = "Control", 
                              only.pos = FALSE, 
                              logfc.threshold = 0.25,
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

sc_NCAD_C <- lapply(
  setNames(unique(seu_PBMC$cell_type), unique(seu_PBMC$cell_type)), function(celltype) {
    subset.sc <- subset(seu_PBMC, cell_type == celltype)
    Idents(subset.sc) <- "Condition2"
    de_markers <- FindMarkers(subset.sc, 
                              ident.1 = "NCAD",
                              ident.2 = "Control", 
                              only.pos = FALSE, 
                              logfc.threshold = 0.25,
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

sc_CAD_NCAD <- lapply(
  setNames(unique(seu_PBMC$cell_type), unique(seu_PBMC$cell_type)), function(celltype) {
    subset.sc <- subset(seu_PBMC, cell_type == celltype)
    Idents(subset.sc) <- "Condition2"
    de_markers <- FindMarkers(subset.sc, 
                              ident.1 = "CAD",
                              ident.2 = "NCAD", 
                              only.pos = FALSE, 
                              logfc.threshold = 0.25,
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

sc_DGE <- list("sc_CAD_C" = sc_CAD_C, "sc_NCAD_C" = sc_NCAD_C, "sc_CAD_NCAD" = sc_CAD_NCAD)

write_rds(sc_DGE, paste0("RData/", Sys.Date(),"_DGE_sc.rds"))

```

#### FRDA vs Control (Whole Blood)

```{r}
DGE_sc <- lapply(
  setNames(unique(seu_WB$cell_type), unique(seu_WB$cell_type)), function(celltype) {
    subset.sc <- subset(seu_WB, cell_type == celltype)
    Idents(subset.sc) <- "Condition"
    de_markers <- FindMarkers(subset.sc, 
                              ident.1 = "FRDA",
                              ident.2 = "Control", 
                              only.pos = FALSE, 
                              logfc.threshold = 0.25,
                              verbose = TRUE) |> 
      rownames_to_column(var = "gene") |> 
      left_join(y = unique(annotations[, c("gene_name", "description")]),
               by = c("gene" = "gene_name"))
    
    return(de_markers)
})

write_rds(DGE_sc, paste0("RData/", Sys.Date(), "_DGE_sc_res_WB.rds"))

```






