---
title: "Trajectory Inference"
format: html
editor: source
author: viv3kanand
date: "`r format(Sys.time(), '%d %B, %Y')`"
---

### Option presets

```{r}
#| label: options
#| echo: false
#| eval: true
#| warning: false

options(Seurat.object.assay.calcn = TRUE)
options(renv.config.pak.enabled = FALSE)

```

## Installation

```{r}
#| label: install packages
#| echo: true
#| eval: false

renv::install("Bioc::condiments")
```


## Load required libraries

```{r}
#| label: load packages
#| echo: true
#| eval: true
#| message: false
#| warning: false

require(tidyverse)
require(condiments)
require(Seurat)

```

## Load data

```{r}
#| label: load data
#| echo: true
#| eval: true

seu_PBMC <- read_rds("../data/2024-11-22_seurat_obj_PBMC.rds")

DefaultAssay(seu_PBMC) <- "RNA"
Idents(seu_PBMC) <- "cell_type"
```


## Trajectory inference

### Imbalance score

We used condiments for calculating an imbalance score for each cell which represents the deviations of the local distribution of conditions in comparison with the global distribution in the same neighborhood of that cell.

```{r}

df <- bind_cols(
  as.data.frame(seu_PBMC@reductions$umap.harmony@cell.embeddings),
  as.data.frame(seu_PBMC@meta.data[,c(6,29)])
  ) |> 
  sample_frac(1)

scores_FA <- condiments::imbalance_score(
  Object = df |> select(umapharmony_1, umapharmony_2) |>  as.matrix(), 
  conditions = df$Condition,
  k = 20, 
  smooth = 40)

df$scores <- scores_FA$scaled_scores




cad_ncad <- subset(x = seurat_obj, subset = Condition2 %in% c("CAD", "NCAD"))

df_cad <- bind_cols(
  as.data.frame(cad_ncad@reductions$umap.harmony@cell.embeddings),
  as.data.frame(cad_ncad@meta.data[,c(26, 29)])
  ) |> 
  sample_frac(1)

scores_CAD <- condiments::imbalance_score(
  Object = df_cad |> select(umapharmony_1, umapharmony_2) |>  as.matrix(), 
  conditions = df_cad$Condition2,
  k = 20, 
  smooth = 40)

df_cad$scores <- scores_CAD$scaled_scores

p1 <- ggplot(df, aes(x = umapharmony_1, y = umapharmony_2, col = scores)) +
    geom_point(size = .7) +
    scale_color_viridis_c(option = "C") +
    labs(col = "Scores", title = "FRDA vs Control")

p2 <- ggplot(df_cad, aes(x = umapharmony_1, y = umapharmony_2, col = scores)) +
    geom_point(size = .7) +
    scale_color_viridis_c(option = "C") +
    labs(col = "Scores", title = "CAD vs NCAD")
```









