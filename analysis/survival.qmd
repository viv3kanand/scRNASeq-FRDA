---
title: "Survival Analysis"
author: "viv3kanand"
format: html
editor: source
---

### Install packages

```{r}
#| label: install
#| echo: true
#| eval: false
options(renv.config.pak.enabled = TRUE)

renv::install("pharmaverse/ggsurvfit")
renv::install("survival")

```

### Load libraries

```{r}
#| label: packages
#| echo: true
#| eval: true
#| message: false
#| warning: false

require(DESeq2)
require(tidyverse)
require(survival)
require(ggsurvfit)
```

### Load data

```{r}
#| label: load data
#| echo: false
#| eval: true

dds <- read_rds("RData/Bulk/2025-06-04_dds.rds")
```

### Transform and filter data

```{r}
counts <- counts(dds, normalized = TRUE)

# filter genes whose expression is zero in more than half the samples
filter_fun <- function(x){
  x <- t(apply(as.matrix(x),1,as.numeric))
  r <- as.numeric(apply(x,1,function(i) sum(i == 0)))
  remove <- which(r > dim(x)[2]*0.5)
  return(remove)
}
remove <- filter_fun(counts)
counts <- counts[-remove,]
```

### Batch correction

```{r}
log_counts <- log2(counts + 1)

mm <- model.matrix(~Condition, colData(dds))
log_counts <- limma::removeBatchEffect(log_counts, batch=colData(dds)$Batch, design=mm)
```

### zscore calculation

```{r}
# Extract case expression matrix
case_counts <- log_counts[, 1:52]

# Calculate mean and SD across control samples for each gene
mean_n <- rowMeans(log_counts[, 53:64])
sd_n <- apply(log_counts[, 53:64], 1, sd)

# zscore scaling (broadcasting using sweep)
z_counts <- sweep(case_counts, 1, mean_n, FUN = "-")
z_counts <- sweep(z_counts, 1, sd_n, FUN = "/")
```


```{r}
event_counts <- t(apply(z_counts, 1, function(x) ifelse(abs(x) > 1, 1, 0)))
```


```{r}
meta <- colData(dds) |> as.data.frame()
```

```{r}
ind_case <- which(unique(colnames(z_counts)) %in% rownames(meta))
ind_meta <- which(rownames(meta) %in% colnames(z_counts))

ind_gene <- which(rownames(z_counts) == "IL10RB")

s <- survfit(Surv(as.numeric(as.character(meta$DD))[ind_meta], meta$HCM[ind_meta]) ~ 
               event_counts[ind_gene, ind_case])

s1 <- tryCatch(
 survdiff(Surv(as.numeric(as.character(meta$DD))[ind_meta], meta$HCM[ind_meta]) ~ 
            event_counts[ind_gene, ind_case]),
  error = function(e)
  return(NA)
)

ifelse(is.na(s1), next, (round(1 - pchisq(s1$chisq, length(s1$n) - 1),3)))[[1]]

plot(s, col=c(1:3), frame=F, lwd=2, main=paste(rownames(z_counts)[ind_gene],sep="\n"))
```


```{r}
prep_data <- function(gene) {
  meta[ind_meta,] |> 
    mutate(
      group = event_counts[gene,],
      gene = gene
    ) |> 
    select(DD, HCM, group, gene)
}

gene_li <- ipa_m3[ipa_m3$Pathways == "Cardiac Hypertrophy Signaling (Enhanced)",]$Molecules |> strsplit(",") |> unlist()

plot_data <- map_dfr(gene_li, prep_data)




```

































