---
title: "Transcription Factor Enrichment"
format: html
editor: source
author: viv3kanand
date: "`r format(Sys.time(), '%d %B, %Y')`"
---

## Prerequisites

### Option presets

```{r}
#| label: options
#| echo: false
#| eval: true
#| warning: false

options(Seurat.object.assay.calcn = TRUE)
options(renv.config.pak.enabled = TRUE)

```

### Installation

```{r}
#| label: install packages
#| echo: true
#| eval: false

renv::install("saezlab/decoupleR")
renv::install("saezlab/OmnipathR")

```

### Load required libraries

```{r}
#| label: load packages
#| echo: true
#| eval: true
#| message: false
#| warning: false

require(tidyverse)
require(decoupleR)
require(OmnipathR)
require(Seurat)

```

## Transcription Factor Enrichment

### Load data

```{r}
#| label: load data
#| echo: true
#| eval: true

seu_PBMC <- read_rds("../data/2024-11-22_seurat_obj_PBMC.rds")
seu_WB <- read_rds("../data/2024-10-17_seurat_obj_WB.rds")
```

### Download databases

```{r}
#| label: download databases
#| echo: true
#| eval: false

net_TF <- decoupleR::get_collectri(organism = 'human', 
                                   split_complexes = FALSE)

```

### Run ulm

```{r}
#| label: run ulm
#| echo: true
#| eval: false

acts_TF <- decoupleR::run_ulm(mat = as.matrix(seu_WB@assays$RNA$data), 
                              net = net_TF, 
                              .source = 'source',
                              .target = 'target',
                              .mor='mor', 
                              minsize = 5)

```

### Extract ulm and update seurat object

```{r}
#| label: create seurat obj
#| echo: true
#| eval: false

seu_WB[['tfsulm']] <- acts_TF |> 
  tidyr::pivot_wider(id_cols = 'source', 
                     names_from = 'condition',
                     values_from = 'score') |> 
  tibble::column_to_rownames('source') |> 
  Seurat::CreateAssayObject()

DefaultAssay(seu_WB) <- "tfsulm"

seu_WB <- Seurat::ScaleData(seu_WB)
seu_WB@assays$tfsulm@data <- seu_WB@assays$tfsulm@scale.data
```

### Extract ulm and update seurat object

```{r}
#| label: create seurat obj
#| echo: true
#| eval: true

p1 <- Seurat::DimPlot(seurat_obj, 
                      reduction = "umap.harmony", 
                      label = TRUE, 
                      pt.size = 0.5) + 
      Seurat::NoLegend() + 
      ggplot2::ggtitle('Cell types')

colors <- rev(RColorBrewer::brewer.pal(n = 11, name = "RdBu")[c(2, 10)])

p2 <- Seurat::FeaturePlot(seurat_obj, features = c("PAX5"), reduction = "umap.harmony") + 
      ggplot2::scale_colour_gradient2(low = colors[1], mid = 'white', high = colors[2]) +
      ggplot2::ggtitle('PAX5 activity')

DefaultAssay(object = seurat_obj) <- "RNA"
p3 <- Seurat::FeaturePlot(seurat_obj, 
                          features = c("PAX5"), reduction = "umap.harmony") + 
      ggplot2::ggtitle('PAX5 expression')

Seurat::DefaultAssay(seurat_obj) <- "tfsulm"

p <- p1 | p2 | p3
p



t(as.matrix(seu_WB@assays$tfsulm@data)) |> 
  as.data.frame() |> 
  dplyr::mutate(cluster = seu_WB$cell_type,
                condition = seu_WB$Condition) |> 
  tidyr::pivot_longer(cols = c(-cluster, -condition), 
                      names_to = "source", 
                      values_to = "score") |> 
  dplyr::group_by(cluster, condition, source) |> 
  dplyr::summarise(mean = mean(score)) |>
  tidyr::pivot_wider(id_cols = c(cluster, source),
                     names_from = condition,
                     values_from = mean) |> 
  write_csv("data/temp/TF_enrichment_WB.csv")
```


```{r}
t(as.matrix(seu_WB@assays$tfsulm@data)) |> 
    as.data.frame() %>%
    dplyr::mutate(cluster = Seurat::Idents(seu_WB),
                  Condition = seu_WB@meta.data$Condition) |> 
    tidyr::pivot_longer(cols = c(-cluster, -Condition), 
                        names_to = "source", 
                        values_to = "score") |> 
    group_by(source, cluster) |> 
    summarise(ttest = list(t.test(score ~ Condition))) |> 
    mutate(ttest = map(ttest, broom::tidy)) |> 
    unnest(cols = c(ttest))
```










